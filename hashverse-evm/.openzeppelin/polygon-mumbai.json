{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xcA181D83Ee4Fb0993466Eee72bd7D0383341E0e7",
    "txHash": "0x8fce05e281dca5f85c44e5e3e1e2c0a565008f6ac2912b49ff185ac4a1bad1f2"
  },
  "proxies": [
    {
      "address": "0xfb884D073e6d8dCE15F6e90257C99484F9709023",
      "txHash": "0x2290b7f4e18b91d9fbd2887d35b311904155b2f4b2603d94de4686087794acf3",
      "kind": "transparent"
    },
    {
      "address": "0x45E5bDec58F6aC9011Aa2397DDB4Aa6aa7aBB0b9",
      "txHash": "0x25800dbbf5d15dd373e003a133c3a3921bd924e4536fe2a3a1e92249623a5129",
      "kind": "transparent"
    },
    {
      "address": "0x2F5f6659511b0cB3aBBa877e9d3c59fEd3B2c6d9",
      "txHash": "0xad0aa48ffce395d19849d4417fd699ad8ba64119766368ac54ee1232a8a3c117",
      "kind": "transparent"
    }
  ],
  "impls": {
    "d65ef6a9abc85d3420f5e969b2aabe994214e168fffebe6a551193ebbfe5f394": {
      "address": "0x11BC2791cBF6A35c46A9144FCb3f944609d59b0a",
      "txHash": "0xc7bfc451a95294ad88310684b7ee4e56459c2a0776acf942a1a411507ea84417",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "renovaAvatar",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RenovaCommandDeckBase",
            "src": "contracts/core/RenovaCommandDeckBase.sol:23"
          },
          {
            "label": "renovaItem",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "RenovaCommandDeckBase",
            "src": "contracts/core/RenovaCommandDeckBase.sol:26"
          },
          {
            "label": "hashflowRouter",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "RenovaCommandDeckBase",
            "src": "contracts/core/RenovaCommandDeckBase.sol:29"
          },
          {
            "label": "questOwner",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "RenovaCommandDeckBase",
            "src": "contracts/core/RenovaCommandDeckBase.sol:32"
          },
          {
            "label": "questDeploymentAddresses",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "RenovaCommandDeckBase",
            "src": "contracts/core/RenovaCommandDeckBase.sol:35"
          },
          {
            "label": "questIdsByDeploymentAddress",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_bytes32)",
            "contract": "RenovaCommandDeckBase",
            "src": "contracts/core/RenovaCommandDeckBase.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)16_storage",
            "contract": "RenovaCommandDeckBase",
            "src": "contracts/core/RenovaCommandDeckBase.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "123",
            "type": "t_array(t_uint256)16_storage",
            "contract": "RenovaCommandDeckSatellite",
            "src": "contracts/core/RenovaCommandDeckSatellite.sol:17"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)16_storage": {
            "label": "uint256[16]",
            "numberOfBytes": "512"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "ae484de2e432bf54b3715e994a19ae7d5e7e92e4e8a340ef93edba0b1930fc17": {
      "address": "0x4df258D978759200ccA5C8eB89b5dAF5DF3dAFD8",
      "txHash": "0x7d6d8a79ed9ef738785e2847e83f919e0f268dc2c4113a2b19e9ab1e27f6f6c5",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_wormhole",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "WormholeBaseUpgradeable",
            "src": "contracts/wormhole/WormholeBaseUpgradeable.sol:21"
          },
          {
            "label": "_wormholeConsistencyLevel",
            "offset": 20,
            "slot": "151",
            "type": "t_uint8",
            "contract": "WormholeBaseUpgradeable",
            "src": "contracts/wormhole/WormholeBaseUpgradeable.sol:22"
          },
          {
            "label": "_processedMessageHashes",
            "offset": 0,
            "slot": "152",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "WormholeBaseUpgradeable",
            "src": "contracts/wormhole/WormholeBaseUpgradeable.sol:23"
          },
          {
            "label": "_wormholeRemotes",
            "offset": 0,
            "slot": "153",
            "type": "t_mapping(t_uint16,t_bytes32)",
            "contract": "WormholeBaseUpgradeable",
            "src": "contracts/wormhole/WormholeBaseUpgradeable.sol:25"
          },
          {
            "label": "_wormholeChainId",
            "offset": 0,
            "slot": "154",
            "type": "t_uint16",
            "contract": "WormholeBaseUpgradeable",
            "src": "contracts/wormhole/WormholeBaseUpgradeable.sol:27"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)16_storage",
            "contract": "WormholeBaseUpgradeable",
            "src": "contracts/wormhole/WormholeBaseUpgradeable.sol:30"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "171",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "172",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "173",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "174",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "175",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "176",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "177",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "_customBaseURI",
            "offset": 0,
            "slot": "221",
            "type": "t_string_storage",
            "contract": "RenovaAvatarBase",
            "src": "contracts/nft/RenovaAvatarBase.sol:22"
          },
          {
            "label": "_renovaCommandDeck",
            "offset": 0,
            "slot": "222",
            "type": "t_address",
            "contract": "RenovaAvatarBase",
            "src": "contracts/nft/RenovaAvatarBase.sol:24"
          },
          {
            "label": "factions",
            "offset": 0,
            "slot": "223",
            "type": "t_mapping(t_address,t_enum(RenovaFaction)3156)",
            "contract": "RenovaAvatarBase",
            "src": "contracts/nft/RenovaAvatarBase.sol:27"
          },
          {
            "label": "characterIds",
            "offset": 0,
            "slot": "224",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "RenovaAvatarBase",
            "src": "contracts/nft/RenovaAvatarBase.sol:30"
          },
          {
            "label": "tokenIds",
            "offset": 0,
            "slot": "225",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "RenovaAvatarBase",
            "src": "contracts/nft/RenovaAvatarBase.sol:33"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "226",
            "type": "t_array(t_uint256)16_storage",
            "contract": "RenovaAvatarBase",
            "src": "contracts/nft/RenovaAvatarBase.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "242",
            "type": "t_array(t_uint256)16_storage",
            "contract": "RenovaAvatarSatellite",
            "src": "contracts/nft/RenovaAvatarSatellite.sol:14"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)16_storage": {
            "label": "uint256[16]",
            "numberOfBytes": "512"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_enum(RenovaFaction)3156": {
            "label": "enum IRenovaAvatarBase.RenovaFaction",
            "members": [
              "RESISTANCE",
              "SOLUS"
            ],
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_enum(RenovaFaction)3156)": {
            "label": "mapping(address => enum IRenovaAvatarBase.RenovaFaction)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_bytes32)": {
            "label": "mapping(uint16 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    },
    "8b2cf8d0a089047b91a0d58d9a504ba9c2a0c7c4b71bc400415a226d7f32dc31": {
      "address": "0x2a2ff1Cc786cbb4779b555494064b14a32bEAcC9",
      "txHash": "0xabad48e04d4aa7dc2bb21a3b27ff1d7802c92d33dc39743c7fb4832f96f96de1",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:62",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:67"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_defaultRoyaltyInfo",
            "offset": 0,
            "slot": "101",
            "type": "t_struct(RoyaltyInfo)1545_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:36"
          },
          {
            "label": "_tokenRoyaltyInfo",
            "offset": 0,
            "slot": "102",
            "type": "t_mapping(t_uint256,t_struct(RoyaltyInfo)1545_storage)",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:37"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "103",
            "type": "t_array(t_uint256)48_storage",
            "contract": "ERC2981Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/common/ERC2981Upgradeable.sol:123"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_wormhole",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "WormholeBaseUpgradeable",
            "src": "contracts/wormhole/WormholeBaseUpgradeable.sol:21"
          },
          {
            "label": "_wormholeConsistencyLevel",
            "offset": 20,
            "slot": "201",
            "type": "t_uint8",
            "contract": "WormholeBaseUpgradeable",
            "src": "contracts/wormhole/WormholeBaseUpgradeable.sol:22"
          },
          {
            "label": "_processedMessageHashes",
            "offset": 0,
            "slot": "202",
            "type": "t_mapping(t_bytes32,t_bool)",
            "contract": "WormholeBaseUpgradeable",
            "src": "contracts/wormhole/WormholeBaseUpgradeable.sol:23"
          },
          {
            "label": "_wormholeRemotes",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_uint16,t_bytes32)",
            "contract": "WormholeBaseUpgradeable",
            "src": "contracts/wormhole/WormholeBaseUpgradeable.sol:25"
          },
          {
            "label": "_wormholeChainId",
            "offset": 0,
            "slot": "204",
            "type": "t_uint16",
            "contract": "WormholeBaseUpgradeable",
            "src": "contracts/wormhole/WormholeBaseUpgradeable.sol:27"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "205",
            "type": "t_array(t_uint256)16_storage",
            "contract": "WormholeBaseUpgradeable",
            "src": "contracts/wormhole/WormholeBaseUpgradeable.sol:30"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "221",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "222",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "223",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "224",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "225",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "226",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "227",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:514"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "271",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721RoyaltyUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721RoyaltyUpgradeable.sol:50"
          },
          {
            "label": "_customBaseURI",
            "offset": 0,
            "slot": "321",
            "type": "t_string_storage",
            "contract": "RenovaItemBase",
            "src": "contracts/nft/RenovaItemBase.sol:21"
          },
          {
            "label": "_bridgeNonces",
            "offset": 0,
            "slot": "322",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "RenovaItemBase",
            "src": "contracts/nft/RenovaItemBase.sol:22"
          },
          {
            "label": "_hashverseItemIds",
            "offset": 0,
            "slot": "323",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "RenovaItemBase",
            "src": "contracts/nft/RenovaItemBase.sol:24"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "324",
            "type": "t_array(t_uint256)16_storage",
            "contract": "RenovaItemBase",
            "src": "contracts/nft/RenovaItemBase.sol:27"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "340",
            "type": "t_array(t_uint256)16_storage",
            "contract": "RenovaItemSatellite",
            "src": "contracts/nft/RenovaItemSatellite.sol:14"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)16_storage": {
            "label": "uint256[16]",
            "numberOfBytes": "512"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_bool)": {
            "label": "mapping(bytes32 => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint16,t_bytes32)": {
            "label": "mapping(uint16 => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_struct(RoyaltyInfo)1545_storage)": {
            "label": "mapping(uint256 => struct ERC2981Upgradeable.RoyaltyInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoyaltyInfo)1545_storage": {
            "label": "struct ERC2981Upgradeable.RoyaltyInfo",
            "members": [
              {
                "label": "receiver",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "royaltyFraction",
                "type": "t_uint96",
                "offset": 20,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          },
          "t_uint96": {
            "label": "uint96",
            "numberOfBytes": "12"
          }
        }
      }
    },
    "39ce467433cd1760025c69342a12017eea7ce599ce0e8edfa3dd09c51c0d6e6e": {
      "address": "0x7CDAb80109D74372F1682ed0E4e65255f20ccbaA",
      "txHash": "0xdc96af9cb4946ed2105b5c5cd1157d13eb1dbf331547fe73fbe6edd326b1fdce",
      "layout": {
        "solcVersion": "0.8.19",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "renovaAvatar",
            "offset": 0,
            "slot": "101",
            "type": "t_address",
            "contract": "RenovaCommandDeckBase",
            "src": "contracts/core/RenovaCommandDeckBase.sol:23"
          },
          {
            "label": "renovaItem",
            "offset": 0,
            "slot": "102",
            "type": "t_address",
            "contract": "RenovaCommandDeckBase",
            "src": "contracts/core/RenovaCommandDeckBase.sol:26"
          },
          {
            "label": "hashflowRouter",
            "offset": 0,
            "slot": "103",
            "type": "t_address",
            "contract": "RenovaCommandDeckBase",
            "src": "contracts/core/RenovaCommandDeckBase.sol:29"
          },
          {
            "label": "questOwner",
            "offset": 0,
            "slot": "104",
            "type": "t_address",
            "contract": "RenovaCommandDeckBase",
            "src": "contracts/core/RenovaCommandDeckBase.sol:32"
          },
          {
            "label": "questDeploymentAddresses",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_bytes32,t_address)",
            "contract": "RenovaCommandDeckBase",
            "src": "contracts/core/RenovaCommandDeckBase.sol:35"
          },
          {
            "label": "questIdsByDeploymentAddress",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_bytes32)",
            "contract": "RenovaCommandDeckBase",
            "src": "contracts/core/RenovaCommandDeckBase.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)16_storage",
            "contract": "RenovaCommandDeckBase",
            "src": "contracts/core/RenovaCommandDeckBase.sol:41"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "123",
            "type": "t_array(t_uint256)16_storage",
            "contract": "RenovaCommandDeckSatellite",
            "src": "contracts/core/RenovaCommandDeckSatellite.sol:17"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)16_storage": {
            "label": "uint256[16]",
            "numberOfBytes": "512"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bytes32)": {
            "label": "mapping(address => bytes32)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_address)": {
            "label": "mapping(bytes32 => address)",
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      }
    }
  }
}
