/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  DeployContractOptions,
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomicfoundation/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "OwnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnableUpgradeable__factory>;
    getContractFactory(
      name: "IERC2981Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC2981Upgradeable__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "ERC2981Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC2981Upgradeable__factory>;
    getContractFactory(
      name: "IERC20PermitUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20PermitUpgradeable__factory>;
    getContractFactory(
      name: "IERC20Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Upgradeable__factory>;
    getContractFactory(
      name: "ERC721Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Upgradeable__factory>;
    getContractFactory(
      name: "ERC721RoyaltyUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721RoyaltyUpgradeable__factory>;
    getContractFactory(
      name: "IERC721MetadataUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721MetadataUpgradeable__factory>;
    getContractFactory(
      name: "IERC721ReceiverUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721ReceiverUpgradeable__factory>;
    getContractFactory(
      name: "IERC721Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Upgradeable__factory>;
    getContractFactory(
      name: "ContextUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContextUpgradeable__factory>;
    getContractFactory(
      name: "ERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165Upgradeable__factory>;
    getContractFactory(
      name: "IERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165Upgradeable__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "IERC1271",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1271__factory>;
    getContractFactory(
      name: "IERC5267",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC5267__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "ERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Permit__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Permit__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "EIP712",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EIP712__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "ShortStrings",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ShortStrings__factory>;
    getContractFactory(
      name: "RenovaCommandDeck",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RenovaCommandDeck__factory>;
    getContractFactory(
      name: "RenovaCommandDeckBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RenovaCommandDeckBase__factory>;
    getContractFactory(
      name: "RenovaCommandDeckSatellite",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RenovaCommandDeckSatellite__factory>;
    getContractFactory(
      name: "RenovaQuest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RenovaQuest__factory>;
    getContractFactory(
      name: "IRenovaCommandDeck",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRenovaCommandDeck__factory>;
    getContractFactory(
      name: "IRenovaCommandDeckBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRenovaCommandDeckBase__factory>;
    getContractFactory(
      name: "IRenovaCommandDeckSatellite",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRenovaCommandDeckSatellite__factory>;
    getContractFactory(
      name: "IRenovaQuest",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRenovaQuest__factory>;
    getContractFactory(
      name: "IERC4906Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC4906Upgradeable__factory>;
    getContractFactory(
      name: "IHashflowRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IHashflowRouter__factory>;
    getContractFactory(
      name: "IWormhole",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWormhole__factory>;
    getContractFactory(
      name: "IRenovaAvatar",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRenovaAvatar__factory>;
    getContractFactory(
      name: "IRenovaAvatarBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRenovaAvatarBase__factory>;
    getContractFactory(
      name: "IRenovaAvatarSatellite",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRenovaAvatarSatellite__factory>;
    getContractFactory(
      name: "IRenovaItem",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRenovaItem__factory>;
    getContractFactory(
      name: "IRenovaItemBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRenovaItemBase__factory>;
    getContractFactory(
      name: "IRenovaItemSatellite",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRenovaItemSatellite__factory>;
    getContractFactory(
      name: "IStakingVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStakingVault__factory>;
    getContractFactory(
      name: "IWormholeBaseUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWormholeBaseUpgradeable__factory>;
    getContractFactory(
      name: "RenovaAvatar",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RenovaAvatar__factory>;
    getContractFactory(
      name: "RenovaAvatarBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RenovaAvatarBase__factory>;
    getContractFactory(
      name: "RenovaAvatarSatellite",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RenovaAvatarSatellite__factory>;
    getContractFactory(
      name: "RenovaItem",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RenovaItem__factory>;
    getContractFactory(
      name: "RenovaItemBase",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RenovaItemBase__factory>;
    getContractFactory(
      name: "RenovaItemSatellite",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RenovaItemSatellite__factory>;
    getContractFactory(
      name: "StakingVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StakingVault__factory>;
    getContractFactory(
      name: "HFT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.HFT__factory>;
    getContractFactory(
      name: "MockHashflowRouter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockHashflowRouter__factory>;
    getContractFactory(
      name: "MockWormhole",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockWormhole__factory>;
    getContractFactory(
      name: "TestERC1271",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestERC1271__factory>;
    getContractFactory(
      name: "TestERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TestERC20__factory>;
    getContractFactory(
      name: "WormholeBaseUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WormholeBaseUpgradeable__factory>;

    getContractAt(
      name: "OwnableUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnableUpgradeable>;
    getContractAt(
      name: "IERC2981Upgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC2981Upgradeable>;
    getContractAt(
      name: "Initializable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "ERC2981Upgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC2981Upgradeable>;
    getContractAt(
      name: "IERC20PermitUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20PermitUpgradeable>;
    getContractAt(
      name: "IERC20Upgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Upgradeable>;
    getContractAt(
      name: "ERC721Upgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Upgradeable>;
    getContractAt(
      name: "ERC721RoyaltyUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721RoyaltyUpgradeable>;
    getContractAt(
      name: "IERC721MetadataUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721MetadataUpgradeable>;
    getContractAt(
      name: "IERC721ReceiverUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721ReceiverUpgradeable>;
    getContractAt(
      name: "IERC721Upgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Upgradeable>;
    getContractAt(
      name: "ContextUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ContextUpgradeable>;
    getContractAt(
      name: "ERC165Upgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165Upgradeable>;
    getContractAt(
      name: "IERC165Upgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165Upgradeable>;
    getContractAt(
      name: "Ownable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "IERC1271",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1271>;
    getContractAt(
      name: "IERC5267",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC5267>;
    getContractAt(
      name: "ERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "ERC20Permit",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Permit>;
    getContractAt(
      name: "IERC20Metadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20Permit",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Permit>;
    getContractAt(
      name: "IERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IERC721",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "EIP712",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EIP712>;
    getContractAt(
      name: "IERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "ShortStrings",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ShortStrings>;
    getContractAt(
      name: "RenovaCommandDeck",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RenovaCommandDeck>;
    getContractAt(
      name: "RenovaCommandDeckBase",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RenovaCommandDeckBase>;
    getContractAt(
      name: "RenovaCommandDeckSatellite",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RenovaCommandDeckSatellite>;
    getContractAt(
      name: "RenovaQuest",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RenovaQuest>;
    getContractAt(
      name: "IRenovaCommandDeck",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IRenovaCommandDeck>;
    getContractAt(
      name: "IRenovaCommandDeckBase",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IRenovaCommandDeckBase>;
    getContractAt(
      name: "IRenovaCommandDeckSatellite",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IRenovaCommandDeckSatellite>;
    getContractAt(
      name: "IRenovaQuest",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IRenovaQuest>;
    getContractAt(
      name: "IERC4906Upgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC4906Upgradeable>;
    getContractAt(
      name: "IHashflowRouter",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IHashflowRouter>;
    getContractAt(
      name: "IWormhole",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IWormhole>;
    getContractAt(
      name: "IRenovaAvatar",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IRenovaAvatar>;
    getContractAt(
      name: "IRenovaAvatarBase",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IRenovaAvatarBase>;
    getContractAt(
      name: "IRenovaAvatarSatellite",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IRenovaAvatarSatellite>;
    getContractAt(
      name: "IRenovaItem",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IRenovaItem>;
    getContractAt(
      name: "IRenovaItemBase",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IRenovaItemBase>;
    getContractAt(
      name: "IRenovaItemSatellite",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IRenovaItemSatellite>;
    getContractAt(
      name: "IStakingVault",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IStakingVault>;
    getContractAt(
      name: "IWormholeBaseUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IWormholeBaseUpgradeable>;
    getContractAt(
      name: "RenovaAvatar",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RenovaAvatar>;
    getContractAt(
      name: "RenovaAvatarBase",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RenovaAvatarBase>;
    getContractAt(
      name: "RenovaAvatarSatellite",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RenovaAvatarSatellite>;
    getContractAt(
      name: "RenovaItem",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RenovaItem>;
    getContractAt(
      name: "RenovaItemBase",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RenovaItemBase>;
    getContractAt(
      name: "RenovaItemSatellite",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.RenovaItemSatellite>;
    getContractAt(
      name: "StakingVault",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.StakingVault>;
    getContractAt(
      name: "HFT",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.HFT>;
    getContractAt(
      name: "MockHashflowRouter",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MockHashflowRouter>;
    getContractAt(
      name: "MockWormhole",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MockWormhole>;
    getContractAt(
      name: "TestERC1271",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TestERC1271>;
    getContractAt(
      name: "TestERC20",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.TestERC20>;
    getContractAt(
      name: "WormholeBaseUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.WormholeBaseUpgradeable>;

    deployContract(
      name: "OwnableUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OwnableUpgradeable>;
    deployContract(
      name: "IERC2981Upgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC2981Upgradeable>;
    deployContract(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Initializable>;
    deployContract(
      name: "ERC2981Upgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC2981Upgradeable>;
    deployContract(
      name: "IERC20PermitUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20PermitUpgradeable>;
    deployContract(
      name: "IERC20Upgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Upgradeable>;
    deployContract(
      name: "ERC721Upgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721Upgradeable>;
    deployContract(
      name: "ERC721RoyaltyUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721RoyaltyUpgradeable>;
    deployContract(
      name: "IERC721MetadataUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721MetadataUpgradeable>;
    deployContract(
      name: "IERC721ReceiverUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721ReceiverUpgradeable>;
    deployContract(
      name: "IERC721Upgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Upgradeable>;
    deployContract(
      name: "ContextUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContextUpgradeable>;
    deployContract(
      name: "ERC165Upgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165Upgradeable>;
    deployContract(
      name: "IERC165Upgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165Upgradeable>;
    deployContract(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "IERC1271",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1271>;
    deployContract(
      name: "IERC5267",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC5267>;
    deployContract(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20>;
    deployContract(
      name: "ERC20Permit",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Permit>;
    deployContract(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Metadata>;
    deployContract(
      name: "IERC20Permit",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Permit>;
    deployContract(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721>;
    deployContract(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Receiver>;
    deployContract(
      name: "EIP712",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EIP712>;
    deployContract(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "ShortStrings",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ShortStrings>;
    deployContract(
      name: "RenovaCommandDeck",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RenovaCommandDeck>;
    deployContract(
      name: "RenovaCommandDeckBase",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RenovaCommandDeckBase>;
    deployContract(
      name: "RenovaCommandDeckSatellite",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RenovaCommandDeckSatellite>;
    deployContract(
      name: "RenovaQuest",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RenovaQuest>;
    deployContract(
      name: "IRenovaCommandDeck",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRenovaCommandDeck>;
    deployContract(
      name: "IRenovaCommandDeckBase",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRenovaCommandDeckBase>;
    deployContract(
      name: "IRenovaCommandDeckSatellite",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRenovaCommandDeckSatellite>;
    deployContract(
      name: "IRenovaQuest",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRenovaQuest>;
    deployContract(
      name: "IERC4906Upgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC4906Upgradeable>;
    deployContract(
      name: "IHashflowRouter",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IHashflowRouter>;
    deployContract(
      name: "IWormhole",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IWormhole>;
    deployContract(
      name: "IRenovaAvatar",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRenovaAvatar>;
    deployContract(
      name: "IRenovaAvatarBase",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRenovaAvatarBase>;
    deployContract(
      name: "IRenovaAvatarSatellite",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRenovaAvatarSatellite>;
    deployContract(
      name: "IRenovaItem",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRenovaItem>;
    deployContract(
      name: "IRenovaItemBase",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRenovaItemBase>;
    deployContract(
      name: "IRenovaItemSatellite",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRenovaItemSatellite>;
    deployContract(
      name: "IStakingVault",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IStakingVault>;
    deployContract(
      name: "IWormholeBaseUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IWormholeBaseUpgradeable>;
    deployContract(
      name: "RenovaAvatar",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RenovaAvatar>;
    deployContract(
      name: "RenovaAvatarBase",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RenovaAvatarBase>;
    deployContract(
      name: "RenovaAvatarSatellite",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RenovaAvatarSatellite>;
    deployContract(
      name: "RenovaItem",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RenovaItem>;
    deployContract(
      name: "RenovaItemBase",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RenovaItemBase>;
    deployContract(
      name: "RenovaItemSatellite",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RenovaItemSatellite>;
    deployContract(
      name: "StakingVault",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.StakingVault>;
    deployContract(
      name: "HFT",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.HFT>;
    deployContract(
      name: "MockHashflowRouter",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MockHashflowRouter>;
    deployContract(
      name: "MockWormhole",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MockWormhole>;
    deployContract(
      name: "TestERC1271",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TestERC1271>;
    deployContract(
      name: "TestERC20",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TestERC20>;
    deployContract(
      name: "WormholeBaseUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.WormholeBaseUpgradeable>;

    deployContract(
      name: "OwnableUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OwnableUpgradeable>;
    deployContract(
      name: "IERC2981Upgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC2981Upgradeable>;
    deployContract(
      name: "Initializable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Initializable>;
    deployContract(
      name: "ERC2981Upgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC2981Upgradeable>;
    deployContract(
      name: "IERC20PermitUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20PermitUpgradeable>;
    deployContract(
      name: "IERC20Upgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Upgradeable>;
    deployContract(
      name: "ERC721Upgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721Upgradeable>;
    deployContract(
      name: "ERC721RoyaltyUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC721RoyaltyUpgradeable>;
    deployContract(
      name: "IERC721MetadataUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721MetadataUpgradeable>;
    deployContract(
      name: "IERC721ReceiverUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721ReceiverUpgradeable>;
    deployContract(
      name: "IERC721Upgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Upgradeable>;
    deployContract(
      name: "ContextUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContextUpgradeable>;
    deployContract(
      name: "ERC165Upgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165Upgradeable>;
    deployContract(
      name: "IERC165Upgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165Upgradeable>;
    deployContract(
      name: "Ownable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "IERC1271",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1271>;
    deployContract(
      name: "IERC5267",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC5267>;
    deployContract(
      name: "ERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20>;
    deployContract(
      name: "ERC20Permit",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC20Permit>;
    deployContract(
      name: "IERC20Metadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Metadata>;
    deployContract(
      name: "IERC20Permit",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20Permit>;
    deployContract(
      name: "IERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC20>;
    deployContract(
      name: "IERC721",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721>;
    deployContract(
      name: "IERC721Receiver",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Receiver>;
    deployContract(
      name: "EIP712",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EIP712>;
    deployContract(
      name: "IERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "ShortStrings",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ShortStrings>;
    deployContract(
      name: "RenovaCommandDeck",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RenovaCommandDeck>;
    deployContract(
      name: "RenovaCommandDeckBase",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RenovaCommandDeckBase>;
    deployContract(
      name: "RenovaCommandDeckSatellite",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RenovaCommandDeckSatellite>;
    deployContract(
      name: "RenovaQuest",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RenovaQuest>;
    deployContract(
      name: "IRenovaCommandDeck",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRenovaCommandDeck>;
    deployContract(
      name: "IRenovaCommandDeckBase",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRenovaCommandDeckBase>;
    deployContract(
      name: "IRenovaCommandDeckSatellite",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRenovaCommandDeckSatellite>;
    deployContract(
      name: "IRenovaQuest",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRenovaQuest>;
    deployContract(
      name: "IERC4906Upgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC4906Upgradeable>;
    deployContract(
      name: "IHashflowRouter",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IHashflowRouter>;
    deployContract(
      name: "IWormhole",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IWormhole>;
    deployContract(
      name: "IRenovaAvatar",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRenovaAvatar>;
    deployContract(
      name: "IRenovaAvatarBase",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRenovaAvatarBase>;
    deployContract(
      name: "IRenovaAvatarSatellite",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRenovaAvatarSatellite>;
    deployContract(
      name: "IRenovaItem",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRenovaItem>;
    deployContract(
      name: "IRenovaItemBase",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRenovaItemBase>;
    deployContract(
      name: "IRenovaItemSatellite",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IRenovaItemSatellite>;
    deployContract(
      name: "IStakingVault",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IStakingVault>;
    deployContract(
      name: "IWormholeBaseUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IWormholeBaseUpgradeable>;
    deployContract(
      name: "RenovaAvatar",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RenovaAvatar>;
    deployContract(
      name: "RenovaAvatarBase",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RenovaAvatarBase>;
    deployContract(
      name: "RenovaAvatarSatellite",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RenovaAvatarSatellite>;
    deployContract(
      name: "RenovaItem",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RenovaItem>;
    deployContract(
      name: "RenovaItemBase",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RenovaItemBase>;
    deployContract(
      name: "RenovaItemSatellite",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.RenovaItemSatellite>;
    deployContract(
      name: "StakingVault",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.StakingVault>;
    deployContract(
      name: "HFT",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.HFT>;
    deployContract(
      name: "MockHashflowRouter",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MockHashflowRouter>;
    deployContract(
      name: "MockWormhole",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MockWormhole>;
    deployContract(
      name: "TestERC1271",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TestERC1271>;
    deployContract(
      name: "TestERC20",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.TestERC20>;
    deployContract(
      name: "WormholeBaseUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.WormholeBaseUpgradeable>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
  }
}
