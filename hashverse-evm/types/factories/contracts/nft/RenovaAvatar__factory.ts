/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  RenovaAvatar,
  RenovaAvatarInterface,
} from "../../../contracts/nft/RenovaAvatar";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum IRenovaAvatarBase.RenovaFaction",
        name: "faction",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "characterId",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "UpdateCustomURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum IRenovaAvatarBase.RenovaFaction",
        name: "faction",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxCharacterId",
        type: "uint256",
      },
    ],
    name: "UpdateMaxCharacterId",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "minStakePower",
        type: "uint256",
      },
    ],
    name: "UpdateMinStakePower",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "stakingVault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "prevStakingVault",
        type: "address",
      },
    ],
    name: "UpdateStakingVault",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newWormhole",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "oldWormhole",
        type: "address",
      },
    ],
    name: "UpdateWormhole",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "newWormholeChainId",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "oldWormholeChainId",
        type: "uint16",
      },
    ],
    name: "UpdateWormholeChainId",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "newConsistencyLevel",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "oldConsistencyLevel",
        type: "uint8",
      },
    ],
    name: "UpdateWormholeConsistencyLevel",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "wormholeChainId",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "remote",
        type: "bytes32",
      },
    ],
    name: "UpdateWormholeRemote",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "emitterChainId",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "emitterAddress",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "sequence",
        type: "uint64",
      },
    ],
    name: "WormholeReceive",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "sequence",
        type: "uint64",
      },
    ],
    name: "WormholeSend",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum IRenovaAvatarBase.RenovaFaction",
        name: "faction",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "characterId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "dstWormholeChainId",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sequence",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "relayerFee",
        type: "uint256",
      },
    ],
    name: "XChainMintOut",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "characterIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "factions",
    outputs: [
      {
        internalType: "enum IRenovaAvatarBase.RenovaFaction",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "renovaCommandDeck",
        type: "address",
      },
      {
        internalType: "address",
        name: "stakingVault",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "minStakePower",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "wormhole",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "wormholeConsistencyLevel",
        type: "uint8",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IRenovaAvatarBase.RenovaFaction",
        name: "faction",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "characterId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "refreshAllMetadata",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "refreshMetadata",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "customBaseURI",
        type: "string",
      },
    ],
    name: "setCustomBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IRenovaAvatarBase.RenovaFaction",
        name: "faction",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "maxCharacterId",
        type: "uint256",
      },
    ],
    name: "updateMaxCharacterId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minStakePower",
        type: "uint256",
      },
    ],
    name: "updateMinStakePower",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakingVault",
        type: "address",
      },
    ],
    name: "updateStakingVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wormhole",
        type: "address",
      },
    ],
    name: "updateWormhole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "wormholeConsistencyLevel",
        type: "uint8",
      },
    ],
    name: "updateWormholeConsistencyLevel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "wormholeChainId",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "authorizedRemote",
        type: "bytes32",
      },
    ],
    name: "updateWormholeRemote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawRelayerFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "dstWormholeChainId",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "wormholeMessageFee",
        type: "uint256",
      },
    ],
    name: "wormholeMintSend",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506200001c62000022565b620000e3565b600054610100900460ff16156200008f5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811614620000e1576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b612ed480620000f36000396000f3fe6080604052600436106101e35760003560e01c806395d89b4111610102578063cdf0ae7611610095578063f26748e211610064578063f26748e2146105bf578063f2fde38b146105df578063fc7f82b7146105ff578063fc97a3031461061f57600080fd5b8063cdf0ae7614610516578063d3c840d314610536578063d95ba42f14610556578063e985e9c51461057657600080fd5b8063aebb4ce9116100d1578063aebb4ce9146104a1578063b88d4fde146104c1578063bed20a87146104e1578063c87b56dd146104f657600080fd5b806395d89b411461042c578063a22cb46514610441578063a333d1a414610461578063ad47f57d1461048157600080fd5b806342842e0e1161017a5780636cc247e0116101495780636cc247e0146103b957806370a08231146103d9578063715018a6146103f95780638da5cb5b1461040e57600080fd5b806342842e0e1461030157806347c138101461032157806361c8893c1461035c5780636352211e1461039957600080fd5b806323b872dd116101b657806323b872dd146102995780632b0e2974146102b95780632d1c7555146102ce5780633bb03890146102e157600080fd5b806301ffc9a7146101e857806306fdde031461021d578063081812fc1461023f578063095ea7b314610277575b600080fd5b3480156101f457600080fd5b506102086102033660046125e2565b61064c565b60405190151581526020015b60405180910390f35b34801561022957600080fd5b50610232610677565b604051610214919061264f565b34801561024b57600080fd5b5061025f61025a366004612662565b610709565b6040516001600160a01b039091168152602001610214565b34801561028357600080fd5b50610297610292366004612697565b610730565b005b3480156102a557600080fd5b506102976102b43660046126c1565b6107a3565b3480156102c557600080fd5b50610297610811565b6102976102dc36600461270d565b61089b565b3480156102ed57600080fd5b506102976102fc36600461273c565b610ae5565b34801561030d57600080fd5b5061029761031c3660046126c1565b610c9f565b34801561032d57600080fd5b5061034e61033c36600461279a565b60e06020526000908152604090205481565b604051908152602001610214565b34801561036857600080fd5b5061038c61037736600461279a565b60df6020526000908152604090205460ff1681565b60405161021491906127ed565b3480156103a557600080fd5b5061025f6103b4366004612662565b610cbf565b3480156103c557600080fd5b506102976103d4366004612887565b610d1f565b3480156103e557600080fd5b5061034e6103f436600461279a565b610dab565b34801561040557600080fd5b50610297610e31565b34801561041a57600080fd5b506065546001600160a01b031661025f565b34801561043857600080fd5b50610232610ea7565b34801561044d57600080fd5b5061029761045c3660046128d0565b610eb6565b34801561046d57600080fd5b5061029761047c36600461279a565b610f2f565b34801561048d57600080fd5b5061029761049c36600461290c565b611027565b3480156104ad57600080fd5b506102976104bc36600461270d565b61103b565b3480156104cd57600080fd5b506102976104dc366004612927565b6111a1565b3480156104ed57600080fd5b50610297611219565b34801561050257600080fd5b50610232610511366004612662565b61125e565b34801561052257600080fd5b5061029761053136600461279a565b6112b3565b34801561054257600080fd5b506102976105513660046129a3565b6112c4565b34801561056257600080fd5b50610297610571366004612662565b6113f3565b34801561058257600080fd5b506102086105913660046129c5565b6001600160a01b03918216600090815260b06020908152604080832093909416825291909152205460ff1690565b3480156105cb57600080fd5b506102976105da3660046129a3565b61142b565b3480156105eb57600080fd5b506102976105fa36600461279a565b6115cf565b34801561060b57600080fd5b5061029761061a366004612662565b611645565b34801561062b57600080fd5b5061034e61063a36600461279a565b60e16020526000908152604090205481565b60006001600160e01b03198216632483248360e11b1480610671575061067182611682565b92915050565b606060ab8054610686906129f8565b80601f01602080910402602001604051908101604052809291908181526020018280546106b2906129f8565b80156106ff5780601f106106d4576101008083540402835291602001916106ff565b820191906000526020600020905b8154815290600101906020018083116106e257829003601f168201915b5050505050905090565b6000610714826116d2565b50600090815260af60205260409020546001600160a01b031690565b60405162461bcd60e51b815260206004820152603860248201527f52656e6f7661417661746172426173653a3a617070726f76652041766174617260448201527f7320617265206e6f6e2d7472616e736665727261626c652e000000000000000060648201526084015b60405180910390fd5b60405162461bcd60e51b815260206004820152603d60248201527f52656e6f7661417661746172426173653a3a7472616e7366657246726f6d204160448201527f76617461727320617265206e6f6e2d7472616e736665727261626c652e000000606482015260840161079a565b610819611731565b6000471161088f5760405162461bcd60e51b815260206004820152603f60248201527f576f726d686f6c65426173655570677261646561626c653a3a7769746864726160448201527f7752656c6179657246656573204e6f206665657320636f6c6c65637465642e00606482015260840161079a565b610899334761178b565b565b6108a433610dab565b60011461090d5760405162461bcd60e51b815260206004820152603160248201527f52656e6f76614176617461723a3a776f726d686f6c654d696e7453656e6420416044820152703b30ba30b9103737ba1036b4b73a32b21760791b606482015260840161079a565b609a5461ffff908116908316036109a15760405162461bcd60e51b815260206004820152604c60248201527f52656e6f76614176617461723a3a776f726d686f6c654d696e7453656e64204460448201527f737420636861696e2073686f756c6420626520646966666572656e742074686160648201526b371029b9319031b430b4b71760a11b608482015260a40161079a565b80341015610a175760405162461bcd60e51b815260206004820152603d60248201527f52656e6f76614176617461723a3a776f726d686f6c654d696e7453656e64206d60448201527f73672e76616c756520646f6573206e6f7420636f76657220666565732e000000606482015260840161079a565b33600081815260e1602090815260408083205460df83528184205460e084528285205492519495610a54959294909360ff90921692899101612a32565b60405160208183030381529060405290506000610a73600083856118a4565b33600081815260df602090815260408083205460e09092529091205492935090917ff4b3508d5f90f4de5c9ac78e5368fcda8d0545fdb9ea079f4aa0ab08274a17a29160ff16908785610ac68934612a85565b604051610ad7959493929190612a98565b60405180910390a250505050565b600054610100900460ff1615808015610b055750600054600160ff909116105b80610b1f5750303b158015610b1f575060005460ff166001145b610b825760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161079a565b6000805460ff191660011790558015610ba5576000805461ff0019166101001790555b610bb0868484611a88565b6001600160a01b038516610c2c5760405162461bcd60e51b815260206004820152603960248201527f52656e6f76614176617461723a3a696e6974616c697a65207374616b696e675660448201527f61756c742063616e6e6f74206265203020616464726573732e00000000000000606482015260840161079a565b60f280546001600160a01b0319166001600160a01b03871617905560f3849055600060f4558015610c97576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b610cba838383604051806020016040528060008152506111a1565b505050565b600081815260ad60205260408120546001600160a01b0316806106715760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161079a565b610d27611731565b60dd610d338282612b1c565b507fa6079050ba457cec0a5a38490491927a6c30ecc1c27e7a9b060080b5278e3f3a60dd604051610d649190612bdc565b60405180910390a1604080516001815260001960208201527f6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c91015b60405180910390a150565b60006001600160a01b038216610e155760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161079a565b506001600160a01b0316600090815260ae602052604090205490565b610e39611731565b60405162461bcd60e51b815260206004820152603e60248201527f52656e6f7661417661746172426173653a3a72656e6f756e63654f776e65727360448201527f6869702043616e6e6f742072656e6f756e6365206f776e6572736869702e0000606482015260840161079a565b606060ac8054610686906129f8565b60405162461bcd60e51b815260206004820152604260248201527f52656e6f7661417661746172426173653a3a736574417070726f76616c466f7260448201527f416c6c204176617461727320617265206e6f6e2d7472616e736665727261626c606482015261329760f11b608482015260a40161079a565b610f37611731565b6001600160a01b038116610fbe5760405162461bcd60e51b815260206004820152604260248201527f52656e6f76614176617461723a3a7570646174655374616b696e675661756c7460448201527f205374616b696e675661756c742063616e6e6f74206265203020616464726573606482015261399760f11b608482015260a40161079a565b60f254604080516001600160a01b03808516825290921660208301527f9858082ae6e14e3e1d6b0fe4e1ca3972646a9e61963e63a40bdfe30510d0404e910160405180910390a160f280546001600160a01b0319166001600160a01b0392909216919091179055565b61102f611731565b61103881611baf565b50565b611043611731565b8161ffff166000036110d05760405162461bcd60e51b815260206004820152604a60248201527f576f726d686f6c65426173655570677261646561626c653a3a7570646174655760448201527f6f726d686f6c6552656d6f746520776f726d686f6c65436861696e4964206361606482015269373737ba10313290181760b11b608482015260a40161079a565b8061114d5760405162461bcd60e51b815260206004820152604160248201527f576f726d686f6c65426173655570677261646561626c653a3a7570646174655760448201527f6f726d686f6c6552656d6f74652052656d6f74652063616e6e6f7420626520306064820152601760f91b608482015260a40161079a565b61ffff8216600081815260996020908152604091829020849055815192835282018390527f35e23d9dc327a48e399315447f33b792cbdbee431b0f83f5c78ed734eb709fac91015b60405180910390a15050565b60405162461bcd60e51b815260206004820152604160248201527f52656e6f7661417661746172426173653a3a736166655472616e73666572467260448201527f6f6d204176617461727320617265206e6f6e2d7472616e736665727261626c656064820152601760f91b608482015260a40161079a565b611221611731565b604080516001815260001960208201527f6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c910160405180910390a1565b6060600061126b83611cb7565b9050600081511161128b57604051806020016040528060008152506112ac565b8060405160200161129c9190612c67565b6040516020818303038152906040525b9392505050565b6112bb611731565b61103881611d07565b6112cc611731565b8060f560008460018111156112e3576112e36127b5565b60018111156112f4576112f46127b5565b815260200190815260200160002054106113885760405162461bcd60e51b815260206004820152604960248201527f52656e6f76614176617461723a3a7570646174654d617843686172616374657260448201527f4964204d6178204368617261637465722049442073686f756c6420626520696e60648201526831b932b0b9b4b7339760b91b608482015260a40161079a565b8060f5600084600181111561139f5761139f6127b5565b60018111156113b0576113b06127b5565b8152602001908152602001600020819055507f9ce53af8de9508636ddade7891543626fef259673b3c4e58f1bb4682512e87188282604051611195929190612c90565b6113fb611731565b6040518181527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce790602001610da0565b60f2546000906001600160a01b03166309d2a776336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015611484573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114a89190612cab565b905060f35481101561150b5760405162461bcd60e51b815260206004820152602660248201527f52656e6f76614176617461723a3a6d696e7420496e73756666696369656e742060448201526539ba30b5b29760d11b606482015260840161079a565b60f56000846001811115611521576115216127b5565b6001811115611532576115326127b5565b81526020019081526020016000205482106115a65760405162461bcd60e51b815260206004820152602e60248201527f52656e6f76614176617461723a3a6d696e74204368617261637465722049442060448201526d3737ba1030bb30b4b630b136329760911b606482015260840161079a565b60f480549060006115b683612cc4565b9190505550610cba60f4546115c83390565b8585611ea8565b6115d7611731565b6001600160a01b03811661163c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161079a565b61103881612038565b61164d611731565b60f38190556040518181527fa1ee656dddf6ba70c27fccb09a7a2d53f532d97881bc5340acc72738a779e82390602001610da0565b60006001600160e01b031982166380ac58cd60e01b14806116b357506001600160e01b03198216635b5e139f60e01b145b8061067157506301ffc9a760e01b6001600160e01b0319831614610671565b600081815260ad60205260409020546001600160a01b03166110385760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161079a565b6065546001600160a01b031633146108995760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161079a565b804710156117db5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161079a565b6000826001600160a01b03168260405160006040518083038185875af1925050503d8060008114611828576040519150601f19603f3d011682016040523d82523d6000602084013e61182d565b606091505b5050905080610cba5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161079a565b6097546000906001600160a01b03166119255760405162461bcd60e51b815260206004820152603f60248201527f576f726d686f6c65426173655570677261646561626c653a3a5f776f726d686f60448201527f6c6553656e6420576f726d686f6c65206973206e6f7420646566696e65642e00606482015260840161079a565b609754600160a01b900460ff166119bf5760405162461bcd60e51b815260206004820152605260248201527f576f726d686f6c65426173655570677261646561626c653a3a205f776f726d6860448201527f6f6c6553656e6420576f726d686f6c6520636f6e73697374656e6379206c657660648201527132b61034b9903737ba103232b334b732b21760711b608482015260a40161079a565b6097546040516358cd21bf60e11b81526001600160a01b0382169163b19a437e9185916119fe9189918991600160a01b90910460ff1690600401612cdd565b60206040518083038185885af1158015611a1c573d6000803e3d6000fd5b50505050506040513d601f19601f82011682018060405250810190611a419190612d0f565b60405167ffffffffffffffff821681529091507f2c0ada6fb76253b7077fa555f15478fe8f40ec488c2c43daae2481a1b5dc40099060200160405180910390a19392505050565b600054610100900460ff16611aaf5760405162461bcd60e51b815260040161079a90612d39565b611ab9828261208a565b611b046040518060400160405280600d81526020016c2932b737bb309020bb30ba30b960991b81525060405180604001604052806004815260200163524e564160e01b8152506120a8565b6001600160a01b038316611b8b5760405162461bcd60e51b815260206004820152604260248201527f52656e6f7661417661746172426173653a3a696e6974616c697a652072656e6f60448201527f7661436f6d6d616e644465636b2063616e6e6f74206265203020616464726573606482015261399760f11b608482015260a40161079a565b505060de80546001600160a01b0319166001600160a01b0392909216919091179055565b60008160ff1611611c4e5760405162461bcd60e51b815260206004820152605d60248201527f576f726d686f6c65426173655570677261646561626c653a3a7570646174655760448201527f6f726d686f6c65436f6e73697374656e63794c6576656c20436f6e736973746560648201527f6e6379206c6576656c2063616e6e6f742062652073657420746f20302e000000608482015260a40161079a565b6097546040805160ff8085168252600160a01b90930490921660208301527f4776078413e31938cb5212df6c9a4ceb607c6f05445e7384623373bc2ac632c4910160405180910390a16097805460ff909216600160a01b0260ff60a01b19909216919091179055565b6060611cc2826116d2565b6000611ccc6120d9565b90506000815111611cec57604051806020016040528060008152506112ac565b80611cf6846120e8565b60405160200161129c929190612d84565b6001600160a01b038116611d835760405162461bcd60e51b815260206004820152603d60248201527f576f726d686f6c65426173655570677261646561626c653a3a5f75706461746560448201527f576f726d686f6c6520416464726573732063616e6e6f7420626520302e000000606482015260840161079a565b609754604080516001600160a01b03808516825290921660208301527f24341e031c7687e9eeb2b18d176371aaf18c9cb7cc6574be31aa512b84a17ebc910160405180910390a1609780546001600160a01b0319166001600160a01b03831690811790915560408051634d4502c960e11b8152905160009291639a8a05929160048083019260209291908290030181865afa158015611e26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e4a9190612db3565b609a546040805161ffff808516825290921660208301529192507ff08a2a85a4e60e268b72b8ae59558a699797e81a58fa0767f74579aa0415d9a5910160405180910390a1609a805461ffff191661ffff9290921691909117905550565b611eb183610dab565b15611f245760405162461bcd60e51b815260206004820152603f60248201527f52656e6f7661417661746172426173653a3a5f6d696e7441766174617220436160448201527f6e6e6f74206d696e74206d6f7265207468616e206f6e65204176617461722e00606482015260840161079a565b333b15611f905760405162461bcd60e51b815260206004820152603460248201527f52656e6f7661417661746172426173653a3a5f6d696e7441766174617220436f604482015273373a3930b1ba399031b0b73737ba1036b4b73a1760611b606482015260840161079a565b6001600160a01b038316600090815260df60205260409020805483919060ff191660018381811115611fc457611fc46127b5565b02179055506001600160a01b038316600090815260e06020908152604080832084905560e19091529020849055611ffb838561217b565b826001600160a01b03167f5d77c9a8f889ac7333a5d3327f7858f4ca3a073565dd6e6b2053bbe124253870858484604051610ad793929190612dd0565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b612092612195565b61209b82611d07565b6120a481611baf565b5050565b600054610100900460ff166120cf5760405162461bcd60e51b815260040161079a90612d39565b6120a482826121c4565b606060dd8054610686906129f8565b606060006120f583612204565b600101905060008167ffffffffffffffff811115612115576121156127fb565b6040519080825280601f01601f19166020018201604052801561213f576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461214957509392505050565b6120a48282604051806020016040528060008152506122dc565b600054610100900460ff166121bc5760405162461bcd60e51b815260040161079a90612d39565b61089961230f565b600054610100900460ff166121eb5760405162461bcd60e51b815260040161079a90612d39565b60ab6121f78382612b1c565b5060ac610cba8282612b1c565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106122435772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef8100000000831061226f576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061228d57662386f26fc10000830492506010015b6305f5e10083106122a5576305f5e100830492506008015b61271083106122b957612710830492506004015b606483106122cb576064830492506002015b600a83106106715760010192915050565b6122e6838361233f565b6122f360008484846124ca565b610cba5760405162461bcd60e51b815260040161079a90612df2565b600054610100900460ff166123365760405162461bcd60e51b815260040161079a90612d39565b61089933612038565b6001600160a01b0382166123955760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161079a565b600081815260ad60205260409020546001600160a01b0316156123fa5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161079a565b600081815260ad60205260409020546001600160a01b03161561245f5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161079a565b6001600160a01b038216600081815260ae602090815260408083208054600101905584835260ad90915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001600160a01b0384163b156125c057604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061250e903390899088908890600401612e44565b6020604051808303816000875af1925050508015612549575060408051601f3d908101601f1916820190925261254691810190612e81565b60015b6125a6573d808015612577576040519150601f19603f3d011682016040523d82523d6000602084013e61257c565b606091505b50805160000361259e5760405162461bcd60e51b815260040161079a90612df2565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506125c4565b5060015b949350505050565b6001600160e01b03198116811461103857600080fd5b6000602082840312156125f457600080fd5b81356112ac816125cc565b60005b8381101561261a578181015183820152602001612602565b50506000910152565b6000815180845261263b8160208601602086016125ff565b601f01601f19169290920160200192915050565b6020815260006112ac6020830184612623565b60006020828403121561267457600080fd5b5035919050565b80356001600160a01b038116811461269257600080fd5b919050565b600080604083850312156126aa57600080fd5b6126b38361267b565b946020939093013593505050565b6000806000606084860312156126d657600080fd5b6126df8461267b565b92506126ed6020850161267b565b9150604084013590509250925092565b61ffff8116811461103857600080fd5b6000806040838503121561272057600080fd5b82356126b3816126fd565b803560ff8116811461269257600080fd5b600080600080600060a0868803121561275457600080fd5b61275d8661267b565b945061276b6020870161267b565b9350604086013592506127806060870161267b565b915061278e6080870161272b565b90509295509295909350565b6000602082840312156127ac57600080fd5b6112ac8261267b565b634e487b7160e01b600052602160045260246000fd5b600281106127e957634e487b7160e01b600052602160045260246000fd5b9052565b6020810161067182846127cb565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561282c5761282c6127fb565b604051601f8501601f19908116603f01168101908282118183101715612854576128546127fb565b8160405280935085815286868601111561286d57600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561289957600080fd5b813567ffffffffffffffff8111156128b057600080fd5b8201601f810184136128c157600080fd5b6125c484823560208401612811565b600080604083850312156128e357600080fd5b6128ec8361267b565b91506020830135801515811461290157600080fd5b809150509250929050565b60006020828403121561291e57600080fd5b6112ac8261272b565b6000806000806080858703121561293d57600080fd5b6129468561267b565b93506129546020860161267b565b925060408501359150606085013567ffffffffffffffff81111561297757600080fd5b8501601f8101871361298857600080fd5b61299787823560208401612811565b91505092959194509250565b600080604083850312156129b657600080fd5b8235600281106126b357600080fd5b600080604083850312156129d857600080fd5b6129e18361267b565b91506129ef6020840161267b565b90509250929050565b600181811c90821680612a0c57607f821691505b602082108103612a2c57634e487b7160e01b600052602260045260246000fd5b50919050565b8581526001600160a01b038516602082015260a08101612a5560408301866127cb565b83606083015261ffff831660808301529695505050505050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561067157610671612a6f565b60a08101612aa682886127cb565b85602083015261ffff8516604083015267ffffffffffffffff841660608301528260808301529695505050505050565b601f821115610cba57600081815260208120601f850160051c81016020861015612afd5750805b601f850160051c820191505b81811015610c9757828155600101612b09565b815167ffffffffffffffff811115612b3657612b366127fb565b612b4a81612b4484546129f8565b84612ad6565b602080601f831160018114612b7f5760008415612b675750858301515b600019600386901b1c1916600185901b178555610c97565b600085815260208120601f198616915b82811015612bae57888601518255948401946001909101908401612b8f565b5085821015612bcc5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000602080835260008454612bf0816129f8565b80848701526040600180841660008114612c115760018114612c2b57612c59565b60ff1985168984015283151560051b890183019550612c59565b896000528660002060005b85811015612c515781548b8201860152908301908801612c36565b8a0184019650505b509398975050505050505050565b60008251612c798184602087016125ff565b64173539b7b760d91b920191825250600501919050565b60408101612c9e82856127cb565b8260208301529392505050565b600060208284031215612cbd57600080fd5b5051919050565b600060018201612cd657612cd6612a6f565b5060010190565b63ffffffff84168152606060208201526000612cfc6060830185612623565b905060ff83166040830152949350505050565b600060208284031215612d2157600080fd5b815167ffffffffffffffff811681146112ac57600080fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008351612d968184602088016125ff565b835190830190612daa8183602088016125ff565b01949350505050565b600060208284031215612dc557600080fd5b81516112ac816126fd565b83815260608101612de460208301856127cb565b826040830152949350505050565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612e7790830184612623565b9695505050505050565b600060208284031215612e9357600080fd5b81516112ac816125cc56fea264697066735822122074834e6b091cd8b860335d6a98cec6a9dae9e3f6b273110c05b3adb0c20f8f4564736f6c63430008130033";

type RenovaAvatarConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RenovaAvatarConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RenovaAvatar__factory extends ContractFactory {
  constructor(...args: RenovaAvatarConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      RenovaAvatar & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RenovaAvatar__factory {
    return super.connect(runner) as RenovaAvatar__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RenovaAvatarInterface {
    return new Interface(_abi) as RenovaAvatarInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RenovaAvatar {
    return new Contract(address, _abi, runner) as unknown as RenovaAvatar;
  }
}
