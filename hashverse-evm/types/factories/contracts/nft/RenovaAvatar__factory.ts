/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  RenovaAvatar,
  RenovaAvatarInterface,
} from "../../../contracts/nft/RenovaAvatar";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum IRenovaAvatarBase.RenovaFaction",
        name: "faction",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "characterId",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "UpdateCustomURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum IRenovaAvatarBase.RenovaFaction",
        name: "faction",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxCharacterId",
        type: "uint256",
      },
    ],
    name: "UpdateMaxCharacterId",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "minStakePower",
        type: "uint256",
      },
    ],
    name: "UpdateMinStakePower",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "stakingVault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "prevStakingVault",
        type: "address",
      },
    ],
    name: "UpdateStakingVault",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newWormhole",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "oldWormhole",
        type: "address",
      },
    ],
    name: "UpdateWormhole",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "newWormholeChainId",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "oldWormholeChainId",
        type: "uint16",
      },
    ],
    name: "UpdateWormholeChainId",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "newConsistencyLevel",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "oldConsistencyLevel",
        type: "uint8",
      },
    ],
    name: "UpdateWormholeConsistencyLevel",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "wormholeChainId",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "remote",
        type: "bytes32",
      },
    ],
    name: "UpdateWormholeRemote",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "emitterChainId",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "emitterAddress",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "sequence",
        type: "uint64",
      },
    ],
    name: "WormholeReceive",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "sequence",
        type: "uint64",
      },
    ],
    name: "WormholeSend",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum IRenovaAvatarBase.RenovaFaction",
        name: "faction",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "characterId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "dstWormholeChainId",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sequence",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "relayerFee",
        type: "uint256",
      },
    ],
    name: "XChainMintOut",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "characterIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "factions",
    outputs: [
      {
        internalType: "enum IRenovaAvatarBase.RenovaFaction",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "renovaCommandDeck",
        type: "address",
      },
      {
        internalType: "address",
        name: "stakingVault",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "minStakePower",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "wormhole",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "wormholeConsistencyLevel",
        type: "uint8",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IRenovaAvatarBase.RenovaFaction",
        name: "faction",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "characterId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "refreshAllMetadata",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "refreshMetadata",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "customBaseURI",
        type: "string",
      },
    ],
    name: "setCustomBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IRenovaAvatarBase.RenovaFaction",
        name: "faction",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "maxCharacterId",
        type: "uint256",
      },
    ],
    name: "updateMaxCharacterId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minStakePower",
        type: "uint256",
      },
    ],
    name: "updateMinStakePower",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakingVault",
        type: "address",
      },
    ],
    name: "updateStakingVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wormhole",
        type: "address",
      },
    ],
    name: "updateWormhole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "wormholeConsistencyLevel",
        type: "uint8",
      },
    ],
    name: "updateWormholeConsistencyLevel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "wormholeChainId",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "authorizedRemote",
        type: "bytes32",
      },
    ],
    name: "updateWormholeRemote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawRelayerFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "dstWormholeChainId",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "wormholeMessageFee",
        type: "uint256",
      },
    ],
    name: "wormholeMintSend",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506200001c62000022565b620000e3565b600054610100900460ff16156200008f5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811614620000e1576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b612e5780620000f36000396000f3fe6080604052600436106101e35760003560e01c806395d89b4111610102578063cdf0ae7611610095578063f26748e211610064578063f26748e2146105bf578063f2fde38b146105df578063fc7f82b7146105ff578063fc97a3031461061f57600080fd5b8063cdf0ae7614610516578063d3c840d314610536578063d95ba42f14610556578063e985e9c51461057657600080fd5b8063aebb4ce9116100d1578063aebb4ce9146104a1578063b88d4fde146104c1578063bed20a87146104e1578063c87b56dd146104f657600080fd5b806395d89b411461042c578063a22cb46514610441578063a333d1a414610461578063ad47f57d1461048157600080fd5b806342842e0e1161017a5780636cc247e0116101495780636cc247e0146103b957806370a08231146103d9578063715018a6146103f95780638da5cb5b1461040e57600080fd5b806342842e0e1461030157806347c138101461032157806361c8893c1461035c5780636352211e1461039957600080fd5b806323b872dd116101b657806323b872dd146102995780632b0e2974146102b95780632d1c7555146102ce5780633bb03890146102e157600080fd5b806301ffc9a7146101e857806306fdde031461021d578063081812fc1461023f578063095ea7b314610277575b600080fd5b3480156101f457600080fd5b50610208610203366004612565565b61064c565b60405190151581526020015b60405180910390f35b34801561022957600080fd5b50610232610677565b60405161021491906125d2565b34801561024b57600080fd5b5061025f61025a3660046125e5565b610709565b6040516001600160a01b039091168152602001610214565b34801561028357600080fd5b5061029761029236600461261a565b610730565b005b3480156102a557600080fd5b506102976102b4366004612644565b6107a3565b3480156102c557600080fd5b50610297610811565b6102976102dc366004612690565b61089b565b3480156102ed57600080fd5b506102976102fc3660046126bf565b610ae5565b34801561030d57600080fd5b5061029761031c366004612644565b610c9f565b34801561032d57600080fd5b5061034e61033c36600461271d565b60e06020526000908152604090205481565b604051908152602001610214565b34801561036857600080fd5b5061038c61037736600461271d565b60df6020526000908152604090205460ff1681565b6040516102149190612770565b3480156103a557600080fd5b5061025f6103b43660046125e5565b610cbf565b3480156103c557600080fd5b506102976103d436600461280a565b610d1f565b3480156103e557600080fd5b5061034e6103f436600461271d565b610dab565b34801561040557600080fd5b50610297610e31565b34801561041a57600080fd5b506065546001600160a01b031661025f565b34801561043857600080fd5b50610232610ea7565b34801561044d57600080fd5b5061029761045c366004612853565b610eb6565b34801561046d57600080fd5b5061029761047c36600461271d565b610f2f565b34801561048d57600080fd5b5061029761049c36600461288f565b611027565b3480156104ad57600080fd5b506102976104bc366004612690565b61103b565b3480156104cd57600080fd5b506102976104dc3660046128aa565b611124565b3480156104ed57600080fd5b5061029761119c565b34801561050257600080fd5b506102326105113660046125e5565b6111e1565b34801561052257600080fd5b5061029761053136600461271d565b611236565b34801561054257600080fd5b50610297610551366004612926565b611247565b34801561056257600080fd5b506102976105713660046125e5565b611376565b34801561058257600080fd5b50610208610591366004612948565b6001600160a01b03918216600090815260b06020908152604080832093909416825291909152205460ff1690565b3480156105cb57600080fd5b506102976105da366004612926565b6113ae565b3480156105eb57600080fd5b506102976105fa36600461271d565b611552565b34801561060b57600080fd5b5061029761061a3660046125e5565b6115c8565b34801561062b57600080fd5b5061034e61063a36600461271d565b60e16020526000908152604090205481565b60006001600160e01b03198216632483248360e11b1480610671575061067182611605565b92915050565b606060ab80546106869061297b565b80601f01602080910402602001604051908101604052809291908181526020018280546106b29061297b565b80156106ff5780601f106106d4576101008083540402835291602001916106ff565b820191906000526020600020905b8154815290600101906020018083116106e257829003601f168201915b5050505050905090565b600061071482611655565b50600090815260af60205260409020546001600160a01b031690565b60405162461bcd60e51b815260206004820152603860248201527f52656e6f7661417661746172426173653a3a617070726f76652041766174617260448201527f7320617265206e6f6e2d7472616e736665727261626c652e000000000000000060648201526084015b60405180910390fd5b60405162461bcd60e51b815260206004820152603d60248201527f52656e6f7661417661746172426173653a3a7472616e7366657246726f6d204160448201527f76617461727320617265206e6f6e2d7472616e736665727261626c652e000000606482015260840161079a565b6108196116b4565b6000471161088f5760405162461bcd60e51b815260206004820152603f60248201527f576f726d686f6c65426173655570677261646561626c653a3a7769746864726160448201527f7752656c6179657246656573204e6f206665657320636f6c6c65637465642e00606482015260840161079a565b610899334761170e565b565b6108a433610dab565b60011461090d5760405162461bcd60e51b815260206004820152603160248201527f52656e6f76614176617461723a3a776f726d686f6c654d696e7453656e6420416044820152703b30ba30b9103737ba1036b4b73a32b21760791b606482015260840161079a565b609a5461ffff908116908316036109a15760405162461bcd60e51b815260206004820152604c60248201527f52656e6f76614176617461723a3a776f726d686f6c654d696e7453656e64204460448201527f737420636861696e2073686f756c6420626520646966666572656e742074686160648201526b371029b9319031b430b4b71760a11b608482015260a40161079a565b80341015610a175760405162461bcd60e51b815260206004820152603d60248201527f52656e6f76614176617461723a3a776f726d686f6c654d696e7453656e64206d60448201527f73672e76616c756520646f6573206e6f7420636f76657220666565732e000000606482015260840161079a565b33600081815260e1602090815260408083205460df83528184205460e084528285205492519495610a54959294909360ff909216928991016129b5565b60405160208183030381529060405290506000610a7360008385611827565b33600081815260df602090815260408083205460e09092529091205492935090917ff4b3508d5f90f4de5c9ac78e5368fcda8d0545fdb9ea079f4aa0ab08274a17a29160ff16908785610ac68934612a08565b604051610ad7959493929190612a1b565b60405180910390a250505050565b600054610100900460ff1615808015610b055750600054600160ff909116105b80610b1f5750303b158015610b1f575060005460ff166001145b610b825760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161079a565b6000805460ff191660011790558015610ba5576000805461ff0019166101001790555b610bb0868484611a0b565b6001600160a01b038516610c2c5760405162461bcd60e51b815260206004820152603960248201527f52656e6f76614176617461723a3a696e6974616c697a65207374616b696e675660448201527f61756c742063616e6e6f74206265203020616464726573732e00000000000000606482015260840161079a565b60f280546001600160a01b0319166001600160a01b03871617905560f3849055600060f4558015610c97576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b610cba83838360405180602001604052806000815250611124565b505050565b600081815260ad60205260408120546001600160a01b0316806106715760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161079a565b610d276116b4565b60dd610d338282612a9f565b507fa6079050ba457cec0a5a38490491927a6c30ecc1c27e7a9b060080b5278e3f3a60dd604051610d649190612b5f565b60405180910390a1604080516001815260001960208201527f6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c91015b60405180910390a150565b60006001600160a01b038216610e155760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161079a565b506001600160a01b0316600090815260ae602052604090205490565b610e396116b4565b60405162461bcd60e51b815260206004820152603e60248201527f52656e6f7661417661746172426173653a3a72656e6f756e63654f776e65727360448201527f6869702043616e6e6f742072656e6f756e6365206f776e6572736869702e0000606482015260840161079a565b606060ac80546106869061297b565b60405162461bcd60e51b815260206004820152604260248201527f52656e6f7661417661746172426173653a3a736574417070726f76616c466f7260448201527f416c6c204176617461727320617265206e6f6e2d7472616e736665727261626c606482015261329760f11b608482015260a40161079a565b610f376116b4565b6001600160a01b038116610fbe5760405162461bcd60e51b815260206004820152604260248201527f52656e6f76614176617461723a3a7570646174655374616b696e675661756c7460448201527f205374616b696e675661756c742063616e6e6f74206265203020616464726573606482015261399760f11b608482015260a40161079a565b60f254604080516001600160a01b03808516825290921660208301527f9858082ae6e14e3e1d6b0fe4e1ca3972646a9e61963e63a40bdfe30510d0404e910160405180910390a160f280546001600160a01b0319166001600160a01b0392909216919091179055565b61102f6116b4565b61103881611b32565b50565b6110436116b4565b8161ffff166000036110d05760405162461bcd60e51b815260206004820152604a60248201527f576f726d686f6c65426173655570677261646561626c653a3a7570646174655760448201527f6f726d686f6c6552656d6f746520776f726d686f6c65436861696e4964206361606482015269373737ba10313290181760b11b608482015260a40161079a565b61ffff8216600081815260996020908152604091829020849055815192835282018390527f35e23d9dc327a48e399315447f33b792cbdbee431b0f83f5c78ed734eb709fac91015b60405180910390a15050565b60405162461bcd60e51b815260206004820152604160248201527f52656e6f7661417661746172426173653a3a736166655472616e73666572467260448201527f6f6d204176617461727320617265206e6f6e2d7472616e736665727261626c656064820152601760f91b608482015260a40161079a565b6111a46116b4565b604080516001815260001960208201527f6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c910160405180910390a1565b606060006111ee83611c3a565b9050600081511161120e576040518060200160405280600081525061122f565b8060405160200161121f9190612bea565b6040516020818303038152906040525b9392505050565b61123e6116b4565b61103881611c8a565b61124f6116b4565b8060f5600084600181111561126657611266612738565b600181111561127757611277612738565b8152602001908152602001600020541061130b5760405162461bcd60e51b815260206004820152604960248201527f52656e6f76614176617461723a3a7570646174654d617843686172616374657260448201527f4964204d6178204368617261637465722049442073686f756c6420626520696e60648201526831b932b0b9b4b7339760b91b608482015260a40161079a565b8060f5600084600181111561132257611322612738565b600181111561133357611333612738565b8152602001908152602001600020819055507f9ce53af8de9508636ddade7891543626fef259673b3c4e58f1bb4682512e87188282604051611118929190612c13565b61137e6116b4565b6040518181527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce790602001610da0565b60f2546000906001600160a01b03166309d2a776336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015611407573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061142b9190612c2e565b905060f35481101561148e5760405162461bcd60e51b815260206004820152602660248201527f52656e6f76614176617461723a3a6d696e7420496e73756666696369656e742060448201526539ba30b5b29760d11b606482015260840161079a565b60f560008460018111156114a4576114a4612738565b60018111156114b5576114b5612738565b81526020019081526020016000205482106115295760405162461bcd60e51b815260206004820152602e60248201527f52656e6f76614176617461723a3a6d696e74204368617261637465722049442060448201526d3737ba1030bb30b4b630b136329760911b606482015260840161079a565b60f4805490600061153983612c47565b9190505550610cba60f45461154b3390565b8585611e2b565b61155a6116b4565b6001600160a01b0381166115bf5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161079a565b61103881611fbb565b6115d06116b4565b60f38190556040518181527fa1ee656dddf6ba70c27fccb09a7a2d53f532d97881bc5340acc72738a779e82390602001610da0565b60006001600160e01b031982166380ac58cd60e01b148061163657506001600160e01b03198216635b5e139f60e01b145b8061067157506301ffc9a760e01b6001600160e01b0319831614610671565b600081815260ad60205260409020546001600160a01b03166110385760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161079a565b6065546001600160a01b031633146108995760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161079a565b8047101561175e5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161079a565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146117ab576040519150601f19603f3d011682016040523d82523d6000602084013e6117b0565b606091505b5050905080610cba5760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161079a565b6097546000906001600160a01b03166118a85760405162461bcd60e51b815260206004820152603f60248201527f576f726d686f6c65426173655570677261646561626c653a3a5f776f726d686f60448201527f6c6553656e6420576f726d686f6c65206973206e6f7420646566696e65642e00606482015260840161079a565b609754600160a01b900460ff166119425760405162461bcd60e51b815260206004820152605260248201527f576f726d686f6c65426173655570677261646561626c653a3a205f776f726d6860448201527f6f6c6553656e6420576f726d686f6c6520636f6e73697374656e6379206c657660648201527132b61034b9903737ba103232b334b732b21760711b608482015260a40161079a565b6097546040516358cd21bf60e11b81526001600160a01b0382169163b19a437e9185916119819189918991600160a01b90910460ff1690600401612c60565b60206040518083038185885af115801561199f573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906119c49190612c92565b60405167ffffffffffffffff821681529091507f2c0ada6fb76253b7077fa555f15478fe8f40ec488c2c43daae2481a1b5dc40099060200160405180910390a19392505050565b600054610100900460ff16611a325760405162461bcd60e51b815260040161079a90612cbc565b611a3c828261200d565b611a876040518060400160405280600d81526020016c2932b737bb309020bb30ba30b960991b81525060405180604001604052806004815260200163524e564160e01b81525061202b565b6001600160a01b038316611b0e5760405162461bcd60e51b815260206004820152604260248201527f52656e6f7661417661746172426173653a3a696e6974616c697a652072656e6f60448201527f7661436f6d6d616e644465636b2063616e6e6f74206265203020616464726573606482015261399760f11b608482015260a40161079a565b505060de80546001600160a01b0319166001600160a01b0392909216919091179055565b60008160ff1611611bd15760405162461bcd60e51b815260206004820152605d60248201527f576f726d686f6c65426173655570677261646561626c653a3a7570646174655760448201527f6f726d686f6c65436f6e73697374656e63794c6576656c20436f6e736973746560648201527f6e6379206c6576656c2063616e6e6f742062652073657420746f20302e000000608482015260a40161079a565b6097546040805160ff8085168252600160a01b90930490921660208301527f4776078413e31938cb5212df6c9a4ceb607c6f05445e7384623373bc2ac632c4910160405180910390a16097805460ff909216600160a01b0260ff60a01b19909216919091179055565b6060611c4582611655565b6000611c4f61205c565b90506000815111611c6f576040518060200160405280600081525061122f565b80611c798461206b565b60405160200161121f929190612d07565b6001600160a01b038116611d065760405162461bcd60e51b815260206004820152603d60248201527f576f726d686f6c65426173655570677261646561626c653a3a5f75706461746560448201527f576f726d686f6c6520416464726573732063616e6e6f7420626520302e000000606482015260840161079a565b609754604080516001600160a01b03808516825290921660208301527f24341e031c7687e9eeb2b18d176371aaf18c9cb7cc6574be31aa512b84a17ebc910160405180910390a1609780546001600160a01b0319166001600160a01b03831690811790915560408051634d4502c960e11b8152905160009291639a8a05929160048083019260209291908290030181865afa158015611da9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dcd9190612d36565b609a546040805161ffff808516825290921660208301529192507ff08a2a85a4e60e268b72b8ae59558a699797e81a58fa0767f74579aa0415d9a5910160405180910390a1609a805461ffff191661ffff9290921691909117905550565b611e3483610dab565b15611ea75760405162461bcd60e51b815260206004820152603f60248201527f52656e6f7661417661746172426173653a3a5f6d696e7441766174617220436160448201527f6e6e6f74206d696e74206d6f7265207468616e206f6e65204176617461722e00606482015260840161079a565b333b15611f135760405162461bcd60e51b815260206004820152603460248201527f52656e6f7661417661746172426173653a3a5f6d696e7441766174617220436f604482015273373a3930b1ba399031b0b73737ba1036b4b73a1760611b606482015260840161079a565b6001600160a01b038316600090815260df60205260409020805483919060ff191660018381811115611f4757611f47612738565b02179055506001600160a01b038316600090815260e06020908152604080832084905560e19091529020849055611f7e83856120fe565b826001600160a01b03167f5d77c9a8f889ac7333a5d3327f7858f4ca3a073565dd6e6b2053bbe124253870858484604051610ad793929190612d53565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b612015612118565b61201e82611c8a565b61202781611b32565b5050565b600054610100900460ff166120525760405162461bcd60e51b815260040161079a90612cbc565b6120278282612147565b606060dd80546106869061297b565b6060600061207883612187565b600101905060008167ffffffffffffffff8111156120985761209861277e565b6040519080825280601f01601f1916602001820160405280156120c2576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846120cc57509392505050565b61202782826040518060200160405280600081525061225f565b600054610100900460ff1661213f5760405162461bcd60e51b815260040161079a90612cbc565b610899612292565b600054610100900460ff1661216e5760405162461bcd60e51b815260040161079a90612cbc565b60ab61217a8382612a9f565b5060ac610cba8282612a9f565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106121c65772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106121f2576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061221057662386f26fc10000830492506010015b6305f5e1008310612228576305f5e100830492506008015b612710831061223c57612710830492506004015b6064831061224e576064830492506002015b600a83106106715760010192915050565b61226983836122c2565b612276600084848461244d565b610cba5760405162461bcd60e51b815260040161079a90612d75565b600054610100900460ff166122b95760405162461bcd60e51b815260040161079a90612cbc565b61089933611fbb565b6001600160a01b0382166123185760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161079a565b600081815260ad60205260409020546001600160a01b03161561237d5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161079a565b600081815260ad60205260409020546001600160a01b0316156123e25760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161079a565b6001600160a01b038216600081815260ae602090815260408083208054600101905584835260ad90915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001600160a01b0384163b1561254357604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290612491903390899088908890600401612dc7565b6020604051808303816000875af19250505080156124cc575060408051601f3d908101601f191682019092526124c991810190612e04565b60015b612529573d8080156124fa576040519150601f19603f3d011682016040523d82523d6000602084013e6124ff565b606091505b5080516000036125215760405162461bcd60e51b815260040161079a90612d75565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050612547565b5060015b949350505050565b6001600160e01b03198116811461103857600080fd5b60006020828403121561257757600080fd5b813561122f8161254f565b60005b8381101561259d578181015183820152602001612585565b50506000910152565b600081518084526125be816020860160208601612582565b601f01601f19169290920160200192915050565b60208152600061122f60208301846125a6565b6000602082840312156125f757600080fd5b5035919050565b80356001600160a01b038116811461261557600080fd5b919050565b6000806040838503121561262d57600080fd5b612636836125fe565b946020939093013593505050565b60008060006060848603121561265957600080fd5b612662846125fe565b9250612670602085016125fe565b9150604084013590509250925092565b61ffff8116811461103857600080fd5b600080604083850312156126a357600080fd5b823561263681612680565b803560ff8116811461261557600080fd5b600080600080600060a086880312156126d757600080fd5b6126e0866125fe565b94506126ee602087016125fe565b935060408601359250612703606087016125fe565b9150612711608087016126ae565b90509295509295909350565b60006020828403121561272f57600080fd5b61122f826125fe565b634e487b7160e01b600052602160045260246000fd5b6002811061276c57634e487b7160e01b600052602160045260246000fd5b9052565b60208101610671828461274e565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff808411156127af576127af61277e565b604051601f8501601f19908116603f011681019082821181831017156127d7576127d761277e565b816040528093508581528686860111156127f057600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561281c57600080fd5b813567ffffffffffffffff81111561283357600080fd5b8201601f8101841361284457600080fd5b61254784823560208401612794565b6000806040838503121561286657600080fd5b61286f836125fe565b91506020830135801515811461288457600080fd5b809150509250929050565b6000602082840312156128a157600080fd5b61122f826126ae565b600080600080608085870312156128c057600080fd5b6128c9856125fe565b93506128d7602086016125fe565b925060408501359150606085013567ffffffffffffffff8111156128fa57600080fd5b8501601f8101871361290b57600080fd5b61291a87823560208401612794565b91505092959194509250565b6000806040838503121561293957600080fd5b82356002811061263657600080fd5b6000806040838503121561295b57600080fd5b612964836125fe565b9150612972602084016125fe565b90509250929050565b600181811c9082168061298f57607f821691505b6020821081036129af57634e487b7160e01b600052602260045260246000fd5b50919050565b8581526001600160a01b038516602082015260a081016129d8604083018661274e565b83606083015261ffff831660808301529695505050505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610671576106716129f2565b60a08101612a29828861274e565b85602083015261ffff8516604083015267ffffffffffffffff841660608301528260808301529695505050505050565b601f821115610cba57600081815260208120601f850160051c81016020861015612a805750805b601f850160051c820191505b81811015610c9757828155600101612a8c565b815167ffffffffffffffff811115612ab957612ab961277e565b612acd81612ac7845461297b565b84612a59565b602080601f831160018114612b025760008415612aea5750858301515b600019600386901b1c1916600185901b178555610c97565b600085815260208120601f198616915b82811015612b3157888601518255948401946001909101908401612b12565b5085821015612b4f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000602080835260008454612b738161297b565b80848701526040600180841660008114612b945760018114612bae57612bdc565b60ff1985168984015283151560051b890183019550612bdc565b896000528660002060005b85811015612bd45781548b8201860152908301908801612bb9565b8a0184019650505b509398975050505050505050565b60008251612bfc818460208701612582565b64173539b7b760d91b920191825250600501919050565b60408101612c21828561274e565b8260208301529392505050565b600060208284031215612c4057600080fd5b5051919050565b600060018201612c5957612c596129f2565b5060010190565b63ffffffff84168152606060208201526000612c7f60608301856125a6565b905060ff83166040830152949350505050565b600060208284031215612ca457600080fd5b815167ffffffffffffffff8116811461122f57600080fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008351612d19818460208801612582565b835190830190612d2d818360208801612582565b01949350505050565b600060208284031215612d4857600080fd5b815161122f81612680565b83815260608101612d67602083018561274e565b826040830152949350505050565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612dfa908301846125a6565b9695505050505050565b600060208284031215612e1657600080fd5b815161122f8161254f56fea2646970667358221220c52c19fc33b46654fcfa35875f43b79406614aa5f433d6c237b4280a73dd417b64736f6c63430008130033";

type RenovaAvatarConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RenovaAvatarConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RenovaAvatar__factory extends ContractFactory {
  constructor(...args: RenovaAvatarConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      RenovaAvatar & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RenovaAvatar__factory {
    return super.connect(runner) as RenovaAvatar__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RenovaAvatarInterface {
    return new Interface(_abi) as RenovaAvatarInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RenovaAvatar {
    return new Contract(address, _abi, runner) as unknown as RenovaAvatar;
  }
}
