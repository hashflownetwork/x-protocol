/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  RenovaAvatar,
  RenovaAvatarInterface,
} from "../../../contracts/nft/RenovaAvatar";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum IRenovaAvatarBase.RenovaFaction",
        name: "faction",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "enum IRenovaAvatarBase.RenovaRace",
        name: "race",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "enum IRenovaAvatarBase.RenovaGender",
        name: "gender",
        type: "uint8",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "UpdateCustomURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "minStakePower",
        type: "uint256",
      },
    ],
    name: "UpdateMinStakePower",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "stakingVault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "prevStakingVault",
        type: "address",
      },
    ],
    name: "UpdateStakingVault",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newWormhole",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "oldWormhole",
        type: "address",
      },
    ],
    name: "UpdateWormhole",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "newWormholeChainId",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "oldWormholeChainId",
        type: "uint16",
      },
    ],
    name: "UpdateWormholeChainId",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "newConsistencyLevel",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "oldConsistencyLevel",
        type: "uint8",
      },
    ],
    name: "UpdateWormholeConsistencyLevel",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "wormholeChainId",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "remote",
        type: "bytes32",
      },
    ],
    name: "UpdateWormholeRemote",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "emitterChainId",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "emitterAddress",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "sequence",
        type: "uint64",
      },
    ],
    name: "WormholeReceive",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "sequence",
        type: "uint64",
      },
    ],
    name: "WormholeSend",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum IRenovaAvatarBase.RenovaFaction",
        name: "faction",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "enum IRenovaAvatarBase.RenovaRace",
        name: "race",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "enum IRenovaAvatarBase.RenovaGender",
        name: "gender",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "dstWormholeChainId",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sequence",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "relayerFee",
        type: "uint256",
      },
    ],
    name: "XChainMintOut",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "factions",
    outputs: [
      {
        internalType: "enum IRenovaAvatarBase.RenovaFaction",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "genders",
    outputs: [
      {
        internalType: "enum IRenovaAvatarBase.RenovaGender",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "renovaCommandDeck",
        type: "address",
      },
      {
        internalType: "address",
        name: "stakingVault",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "minStakePower",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "wormhole",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "wormholeConsistencyLevel",
        type: "uint8",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IRenovaAvatarBase.RenovaFaction",
        name: "faction",
        type: "uint8",
      },
      {
        internalType: "enum IRenovaAvatarBase.RenovaRace",
        name: "race",
        type: "uint8",
      },
      {
        internalType: "enum IRenovaAvatarBase.RenovaGender",
        name: "gender",
        type: "uint8",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "races",
    outputs: [
      {
        internalType: "enum IRenovaAvatarBase.RenovaRace",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "refreshAllMetadata",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "refreshMetadata",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "customBaseURI",
        type: "string",
      },
    ],
    name: "setCustomBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minStakePower",
        type: "uint256",
      },
    ],
    name: "updateMinStakePower",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakingVault",
        type: "address",
      },
    ],
    name: "updateStakingVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wormhole",
        type: "address",
      },
    ],
    name: "updateWormhole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "wormholeConsistencyLevel",
        type: "uint8",
      },
    ],
    name: "updateWormholeConsistencyLevel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "wormholeChainId",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "authorizedRemote",
        type: "bytes32",
      },
    ],
    name: "updateWormholeRemote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawRelayerFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "dstWormholeChainId",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "wormholeMessageFee",
        type: "uint256",
      },
    ],
    name: "wormholeMintSend",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506200001c62000022565b620000e3565b600054610100900460ff16156200008f5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811614620000e1576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b612e3a80620000f36000396000f3fe6080604052600436106101e35760003560e01c80638da5cb5b11610102578063c87b56dd11610095578063e985e9c511610064578063e985e9c5146105b6578063f2fde38b146105ff578063fc7f82b71461061f578063fc97a3031461063f57600080fd5b8063c87b56dd14610536578063cdf0ae7614610556578063d95ba42f14610576578063e6f12af91461059657600080fd5b8063ad47f57d116100d1578063ad47f57d146104c1578063aebb4ce9146104e1578063b88d4fde14610501578063bed20a871461052157600080fd5b80638da5cb5b1461044e57806395d89b411461046c578063a22cb46514610481578063a333d1a4146104a157600080fd5b80633bb038901161017a5780636cc247e0116101495780636cc247e0146103ae57806370a08231146103ce578063715018a6146103fc57806375b921341461041157600080fd5b80633bb038901461031e57806342842e0e1461033e57806361c8893c1461035e5780636352211e1461038e57600080fd5b8063095ea7b3116101b6578063095ea7b3146102b457806323b872dd146102d65780632b0e2974146102f65780632d1c75551461030b57600080fd5b806301ffc9a7146101e857806306fdde031461021d57806307d2a1011461023f578063081812fc1461027c575b600080fd5b3480156101f457600080fd5b506102086102033660046124d0565b61066c565b60405190151581526020015b60405180910390f35b34801561022957600080fd5b50610232610697565b604051610214919061253d565b34801561024b57600080fd5b5061026f61025a36600461256c565b60e16020526000908152604090205460ff1681565b60405161021491906125ad565b34801561028857600080fd5b5061029c6102973660046125c0565b610729565b6040516001600160a01b039091168152602001610214565b3480156102c057600080fd5b506102d46102cf3660046125d9565b610750565b005b3480156102e257600080fd5b506102d46102f1366004612603565b6107c3565b34801561030257600080fd5b506102d4610831565b6102d461031936600461264f565b6108bb565b34801561032a57600080fd5b506102d461033936600461267e565b610b22565b34801561034a57600080fd5b506102d4610359366004612603565b610cdc565b34801561036a57600080fd5b5061026f61037936600461256c565b60df6020526000908152604090205460ff1681565b34801561039a57600080fd5b5061029c6103a93660046125c0565b610cfc565b3480156103ba57600080fd5b506102d46103c9366004612768565b610d5c565b3480156103da57600080fd5b506103ee6103e936600461256c565b610de8565b604051908152602001610214565b34801561040857600080fd5b506102d4610e6e565b34801561041d57600080fd5b5061044161042c36600461256c565b60e06020526000908152604090205460ff1681565b60405161021491906127c5565b34801561045a57600080fd5b506065546001600160a01b031661029c565b34801561047857600080fd5b50610232610ee4565b34801561048d57600080fd5b506102d461049c3660046127d3565b610ef3565b3480156104ad57600080fd5b506102d46104bc36600461256c565b610f6c565b3480156104cd57600080fd5b506102d46104dc36600461280f565b611064565b3480156104ed57600080fd5b506102d46104fc36600461264f565b611078565b34801561050d57600080fd5b506102d461051c36600461282a565b6111dd565b34801561052d57600080fd5b506102d4611255565b34801561054257600080fd5b506102326105513660046125c0565b61129a565b34801561056257600080fd5b506102d461057136600461256c565b6112ef565b34801561058257600080fd5b506102d46105913660046125c0565b611300565b3480156105a257600080fd5b506102d46105b13660046128b3565b611338565b3480156105c257600080fd5b506102086105d1366004612902565b6001600160a01b03918216600090815260b06020908152604080832093909416825291909152205460ff1690565b34801561060b57600080fd5b506102d461061a36600461256c565b611448565b34801561062b57600080fd5b506102d461063a3660046125c0565b6114be565b34801561064b57600080fd5b506103ee61065a36600461256c565b60e26020526000908152604090205481565b60006001600160e01b03198216632483248360e11b14806106915750610691826114fb565b92915050565b606060ab80546106a690612935565b80601f01602080910402602001604051908101604052809291908181526020018280546106d290612935565b801561071f5780601f106106f45761010080835404028352916020019161071f565b820191906000526020600020905b81548152906001019060200180831161070257829003601f168201915b5050505050905090565b60006107348261154b565b50600090815260af60205260409020546001600160a01b031690565b60405162461bcd60e51b815260206004820152603860248201527f52656e6f7661417661746172426173653a3a617070726f76652041766174617260448201527f7320617265206e6f6e2d7472616e736665727261626c652e000000000000000060648201526084015b60405180910390fd5b60405162461bcd60e51b815260206004820152603d60248201527f52656e6f7661417661746172426173653a3a7472616e7366657246726f6d204160448201527f76617461727320617265206e6f6e2d7472616e736665727261626c652e00000060648201526084016107ba565b6108396115aa565b600047116108af5760405162461bcd60e51b815260206004820152603f60248201527f576f726d686f6c65426173655570677261646561626c653a3a7769746864726160448201527f7752656c6179657246656573204e6f206665657320636f6c6c65637465642e0060648201526084016107ba565b6108b93347611604565b565b6108c433610de8565b60011461092d5760405162461bcd60e51b815260206004820152603160248201527f52656e6f76614176617461723a3a776f726d686f6c654d696e7453656e6420416044820152703b30ba30b9103737ba1036b4b73a32b21760791b60648201526084016107ba565b609a5461ffff908116908316036109c15760405162461bcd60e51b815260206004820152604c60248201527f52656e6f76614176617461723a3a776f726d686f6c654d696e7453656e64204460448201527f737420636861696e2073686f756c6420626520646966666572656e742074686160648201526b371029b9319031b430b4b71760a11b608482015260a4016107ba565b80341015610a375760405162461bcd60e51b815260206004820152603d60248201527f52656e6f76614176617461723a3a776f726d686f6c654d696e7453656e64206d60448201527f73672e76616c756520646f6573206e6f7420636f76657220666565732e00000060648201526084016107ba565b33600081815260e2602090815260408083205460df83528184205460e084528285205460e185528386205493519596610a82969395909460ff938416949284169316918a910161296f565b60405160208183030381529060405290506000610aa16000838561171d565b33600081815260df602090815260408083205460e083528184205460e190935292205493945091927fbf64d4639854b235e46d52aad90e589ed5004f765abfd35100f436b83d956fbf9260ff9283169290811691168886610b028a346129db565b604051610b14969594939291906129ee565b60405180910390a250505050565b600054610100900460ff1615808015610b425750600054600160ff909116105b80610b5c5750303b158015610b5c575060005460ff166001145b610bbf5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016107ba565b6000805460ff191660011790558015610be2576000805461ff0019166101001790555b610bed868484611901565b6001600160a01b038516610c695760405162461bcd60e51b815260206004820152603960248201527f52656e6f76614176617461723a3a696e6974616c697a65207374616b696e675660448201527f61756c742063616e6e6f74206265203020616464726573732e0000000000000060648201526084016107ba565b60f380546001600160a01b0319166001600160a01b03871617905560f4849055600060f5558015610cd4576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b610cf7838383604051806020016040528060008152506111dd565b505050565b600081815260ad60205260408120546001600160a01b0316806106915760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016107ba565b610d646115aa565b60dd610d708282612a8b565b507fa6079050ba457cec0a5a38490491927a6c30ecc1c27e7a9b060080b5278e3f3a60dd604051610da19190612b4b565b60405180910390a1604080516001815260001960208201527f6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c91015b60405180910390a150565b60006001600160a01b038216610e525760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016107ba565b506001600160a01b0316600090815260ae602052604090205490565b610e766115aa565b60405162461bcd60e51b815260206004820152603e60248201527f52656e6f7661417661746172426173653a3a72656e6f756e63654f776e65727360448201527f6869702043616e6e6f742072656e6f756e6365206f776e6572736869702e000060648201526084016107ba565b606060ac80546106a690612935565b60405162461bcd60e51b815260206004820152604260248201527f52656e6f7661417661746172426173653a3a736574417070726f76616c466f7260448201527f416c6c204176617461727320617265206e6f6e2d7472616e736665727261626c606482015261329760f11b608482015260a4016107ba565b610f746115aa565b6001600160a01b038116610ffb5760405162461bcd60e51b815260206004820152604260248201527f52656e6f76614176617461723a3a7570646174655374616b696e675661756c7460448201527f205374616b696e675661756c742063616e6e6f74206265203020616464726573606482015261399760f11b608482015260a4016107ba565b60f354604080516001600160a01b03808516825290921660208301527f9858082ae6e14e3e1d6b0fe4e1ca3972646a9e61963e63a40bdfe30510d0404e910160405180910390a160f380546001600160a01b0319166001600160a01b0392909216919091179055565b61106c6115aa565b61107581611a28565b50565b6110806115aa565b8161ffff1660000361110d5760405162461bcd60e51b815260206004820152604a60248201527f576f726d686f6c65426173655570677261646561626c653a3a7570646174655760448201527f6f726d686f6c6552656d6f746520776f726d686f6c65436861696e4964206361606482015269373737ba10313290181760b11b608482015260a4016107ba565b8061118a5760405162461bcd60e51b815260206004820152604160248201527f576f726d686f6c65426173655570677261646561626c653a3a7570646174655760448201527f6f726d686f6c6552656d6f74652052656d6f74652063616e6e6f7420626520306064820152601760f91b608482015260a4016107ba565b61ffff8216600081815260996020908152604091829020849055815192835282018390527f35e23d9dc327a48e399315447f33b792cbdbee431b0f83f5c78ed734eb709fac910160405180910390a15050565b60405162461bcd60e51b815260206004820152604160248201527f52656e6f7661417661746172426173653a3a736166655472616e73666572467260448201527f6f6d204176617461727320617265206e6f6e2d7472616e736665727261626c656064820152601760f91b608482015260a4016107ba565b61125d6115aa565b604080516001815260001960208201527f6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c910160405180910390a1565b606060006112a783611b30565b905060008151116112c757604051806020016040528060008152506112e8565b806040516020016112d89190612bd6565b6040516020818303038152906040525b9392505050565b6112f76115aa565b61107581611b80565b6113086115aa565b6040518181527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce790602001610ddd565b60f3546000906001600160a01b03166309d2a776336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015611391573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113b59190612bff565b905060f4548110156114185760405162461bcd60e51b815260206004820152602660248201527f52656e6f76614176617461723a3a6d696e7420496e73756666696369656e742060448201526539ba30b5b29760d11b60648201526084016107ba565b60f5805490600061142883612c18565b919050555061144260f55461143a3390565b868686611d21565b50505050565b6114506115aa565b6001600160a01b0381166114b55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016107ba565b61107581611f26565b6114c66115aa565b60f48190556040518181527fa1ee656dddf6ba70c27fccb09a7a2d53f532d97881bc5340acc72738a779e82390602001610ddd565b60006001600160e01b031982166380ac58cd60e01b148061152c57506001600160e01b03198216635b5e139f60e01b145b8061069157506301ffc9a760e01b6001600160e01b0319831614610691565b600081815260ad60205260409020546001600160a01b03166110755760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016107ba565b6065546001600160a01b031633146108b95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107ba565b804710156116545760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016107ba565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146116a1576040519150601f19603f3d011682016040523d82523d6000602084013e6116a6565b606091505b5050905080610cf75760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016107ba565b6097546000906001600160a01b031661179e5760405162461bcd60e51b815260206004820152603f60248201527f576f726d686f6c65426173655570677261646561626c653a3a5f776f726d686f60448201527f6c6553656e6420576f726d686f6c65206973206e6f7420646566696e65642e0060648201526084016107ba565b609754600160a01b900460ff166118385760405162461bcd60e51b815260206004820152605260248201527f576f726d686f6c65426173655570677261646561626c653a3a205f776f726d6860448201527f6f6c6553656e6420576f726d686f6c6520636f6e73697374656e6379206c657660648201527132b61034b9903737ba103232b334b732b21760711b608482015260a4016107ba565b6097546040516358cd21bf60e11b81526001600160a01b0382169163b19a437e9185916118779189918991600160a01b90910460ff1690600401612c31565b60206040518083038185885af1158015611895573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906118ba9190612c63565b60405167ffffffffffffffff821681529091507f2c0ada6fb76253b7077fa555f15478fe8f40ec488c2c43daae2481a1b5dc40099060200160405180910390a19392505050565b600054610100900460ff166119285760405162461bcd60e51b81526004016107ba90612c8d565b6119328282611f78565b61197d6040518060400160405280600d81526020016c2932b737bb309020bb30ba30b960991b81525060405180604001604052806004815260200163524e564160e01b815250611f96565b6001600160a01b038316611a045760405162461bcd60e51b815260206004820152604260248201527f52656e6f7661417661746172426173653a3a696e6974616c697a652072656e6f60448201527f7661436f6d6d616e644465636b2063616e6e6f74206265203020616464726573606482015261399760f11b608482015260a4016107ba565b505060de80546001600160a01b0319166001600160a01b0392909216919091179055565b60008160ff1611611ac75760405162461bcd60e51b815260206004820152605d60248201527f576f726d686f6c65426173655570677261646561626c653a3a7570646174655760448201527f6f726d686f6c65436f6e73697374656e63794c6576656c20436f6e736973746560648201527f6e6379206c6576656c2063616e6e6f742062652073657420746f20302e000000608482015260a4016107ba565b6097546040805160ff8085168252600160a01b90930490921660208301527f4776078413e31938cb5212df6c9a4ceb607c6f05445e7384623373bc2ac632c4910160405180910390a16097805460ff909216600160a01b0260ff60a01b19909216919091179055565b6060611b3b8261154b565b6000611b45611fc7565b90506000815111611b6557604051806020016040528060008152506112e8565b80611b6f84611fd6565b6040516020016112d8929190612cd8565b6001600160a01b038116611bfc5760405162461bcd60e51b815260206004820152603d60248201527f576f726d686f6c65426173655570677261646561626c653a3a5f75706461746560448201527f576f726d686f6c6520416464726573732063616e6e6f7420626520302e00000060648201526084016107ba565b609754604080516001600160a01b03808516825290921660208301527f24341e031c7687e9eeb2b18d176371aaf18c9cb7cc6574be31aa512b84a17ebc910160405180910390a1609780546001600160a01b0319166001600160a01b03831690811790915560408051634d4502c960e11b8152905160009291639a8a05929160048083019260209291908290030181865afa158015611c9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cc39190612d07565b609a546040805161ffff808516825290921660208301529192507ff08a2a85a4e60e268b72b8ae59558a699797e81a58fa0767f74579aa0415d9a5910160405180910390a1609a805461ffff191661ffff9290921691909117905550565b611d2a84610de8565b15611d9d5760405162461bcd60e51b815260206004820152603f60248201527f52656e6f7661417661746172426173653a3a5f6d696e7441766174617220436160448201527f6e6e6f74206d696e74206d6f7265207468616e206f6e65204176617461722e0060648201526084016107ba565b333b15611e095760405162461bcd60e51b815260206004820152603460248201527f52656e6f7661417661746172426173653a3a5f6d696e7441766174617220436f604482015273373a3930b1ba399031b0b73737ba1036b4b73a1760611b60648201526084016107ba565b6001600160a01b038416600090815260df60205260409020805484919060ff191660018381811115611e3d57611e3d612587565b02179055506001600160a01b038416600090815260e060205260409020805483919060ff19166001836003811115611e7757611e77612587565b02179055506001600160a01b038416600090815260e160205260409020805482919060ff191660018381811115611eb057611eb0612587565b02179055506001600160a01b038416600090815260e260205260409020859055611eda8486612069565b836001600160a01b03167f7f17e288f5974c8af4db868a0bbf2636e24713d920c7eedc36d00a199e776855848484604051611f1793929190612d24565b60405180910390a25050505050565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611f80612083565b611f8982611b80565b611f9281611a28565b5050565b600054610100900460ff16611fbd5760405162461bcd60e51b81526004016107ba90612c8d565b611f9282826120b2565b606060dd80546106a690612935565b60606000611fe3836120f2565b600101905060008167ffffffffffffffff811115612003576120036126dc565b6040519080825280601f01601f19166020018201604052801561202d576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461203757509392505050565b611f928282604051806020016040528060008152506121ca565b600054610100900460ff166120aa5760405162461bcd60e51b81526004016107ba90612c8d565b6108b96121fd565b600054610100900460ff166120d95760405162461bcd60e51b81526004016107ba90612c8d565b60ab6120e58382612a8b565b5060ac610cf78282612a8b565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106121315772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef8100000000831061215d576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061217b57662386f26fc10000830492506010015b6305f5e1008310612193576305f5e100830492506008015b61271083106121a757612710830492506004015b606483106121b9576064830492506002015b600a83106106915760010192915050565b6121d4838361222d565b6121e160008484846123b8565b610cf75760405162461bcd60e51b81526004016107ba90612d58565b600054610100900460ff166122245760405162461bcd60e51b81526004016107ba90612c8d565b6108b933611f26565b6001600160a01b0382166122835760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016107ba565b600081815260ad60205260409020546001600160a01b0316156122e85760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016107ba565b600081815260ad60205260409020546001600160a01b03161561234d5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016107ba565b6001600160a01b038216600081815260ae602090815260408083208054600101905584835260ad90915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001600160a01b0384163b156124ae57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906123fc903390899088908890600401612daa565b6020604051808303816000875af1925050508015612437575060408051601f3d908101601f1916820190925261243491810190612de7565b60015b612494573d808015612465576040519150601f19603f3d011682016040523d82523d6000602084013e61246a565b606091505b50805160000361248c5760405162461bcd60e51b81526004016107ba90612d58565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506124b2565b5060015b949350505050565b6001600160e01b03198116811461107557600080fd5b6000602082840312156124e257600080fd5b81356112e8816124ba565b60005b838110156125085781810151838201526020016124f0565b50506000910152565b600081518084526125298160208601602086016124ed565b601f01601f19169290920160200192915050565b6020815260006112e86020830184612511565b80356001600160a01b038116811461256757600080fd5b919050565b60006020828403121561257e57600080fd5b6112e882612550565b634e487b7160e01b600052602160045260246000fd5b6002811061107557611075612587565b602081016125ba8361259d565b91905290565b6000602082840312156125d257600080fd5b5035919050565b600080604083850312156125ec57600080fd5b6125f583612550565b946020939093013593505050565b60008060006060848603121561261857600080fd5b61262184612550565b925061262f60208501612550565b9150604084013590509250925092565b61ffff8116811461107557600080fd5b6000806040838503121561266257600080fd5b82356125f58161263f565b803560ff8116811461256757600080fd5b600080600080600060a0868803121561269657600080fd5b61269f86612550565b94506126ad60208701612550565b9350604086013592506126c260608701612550565b91506126d06080870161266d565b90509295509295909350565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561270d5761270d6126dc565b604051601f8501601f19908116603f01168101908282118183101715612735576127356126dc565b8160405280935085815286868601111561274e57600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561277a57600080fd5b813567ffffffffffffffff81111561279157600080fd5b8201601f810184136127a257600080fd5b6124b2848235602084016126f2565b600481106127c1576127c1612587565b9052565b6020810161069182846127b1565b600080604083850312156127e657600080fd5b6127ef83612550565b91506020830135801515811461280457600080fd5b809150509250929050565b60006020828403121561282157600080fd5b6112e88261266d565b6000806000806080858703121561284057600080fd5b61284985612550565b935061285760208601612550565b925060408501359150606085013567ffffffffffffffff81111561287a57600080fd5b8501601f8101871361288b57600080fd5b61289a878235602084016126f2565b91505092959194509250565b6002811061107557600080fd5b6000806000606084860312156128c857600080fd5b83356128d3816128a6565b92506020840135600481106128e757600080fd5b915060408401356128f7816128a6565b809150509250925092565b6000806040838503121561291557600080fd5b61291e83612550565b915061292c60208401612550565b90509250929050565b600181811c9082168061294957607f821691505b60208210810361296957634e487b7160e01b600052602260045260246000fd5b50919050565b8681526001600160a01b038616602082015260c0810161298e8661259d565b8560408301526129a160608301866127b1565b6129aa8461259d565b83608083015261ffff831660a0830152979650505050505050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610691576106916129c5565b60c081016129fb8861259d565b878252612a0b60208301886127b1565b612a148661259d565b85604083015261ffff8516606083015267ffffffffffffffff841660808301528260a0830152979650505050505050565b601f821115610cf757600081815260208120601f850160051c81016020861015612a6c5750805b601f850160051c820191505b81811015610cd457828155600101612a78565b815167ffffffffffffffff811115612aa557612aa56126dc565b612ab981612ab38454612935565b84612a45565b602080601f831160018114612aee5760008415612ad65750858301515b600019600386901b1c1916600185901b178555610cd4565b600085815260208120601f198616915b82811015612b1d57888601518255948401946001909101908401612afe565b5085821015612b3b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000602080835260008454612b5f81612935565b80848701526040600180841660008114612b805760018114612b9a57612bc8565b60ff1985168984015283151560051b890183019550612bc8565b896000528660002060005b85811015612bc05781548b8201860152908301908801612ba5565b8a0184019650505b509398975050505050505050565b60008251612be88184602087016124ed565b64173539b7b760d91b920191825250600501919050565b600060208284031215612c1157600080fd5b5051919050565b600060018201612c2a57612c2a6129c5565b5060010190565b63ffffffff84168152606060208201526000612c506060830185612511565b905060ff83166040830152949350505050565b600060208284031215612c7557600080fd5b815167ffffffffffffffff811681146112e857600080fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008351612cea8184602088016124ed565b835190830190612cfe8183602088016124ed565b01949350505050565b600060208284031215612d1957600080fd5b81516112e88161263f565b60608101612d318561259d565b848252612d4160208301856127b1565b612d4a8361259d565b826040830152949350505050565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612ddd90830184612511565b9695505050505050565b600060208284031215612df957600080fd5b81516112e8816124ba56fea264697066735822122041eeca7d19191f4473e2da87de035d4cd93f1b5e98fdd941d30114850396672f64736f6c63430008130033";

type RenovaAvatarConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RenovaAvatarConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RenovaAvatar__factory extends ContractFactory {
  constructor(...args: RenovaAvatarConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      RenovaAvatar & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): RenovaAvatar__factory {
    return super.connect(runner) as RenovaAvatar__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RenovaAvatarInterface {
    return new Interface(_abi) as RenovaAvatarInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RenovaAvatar {
    return new Contract(address, _abi, runner) as unknown as RenovaAvatar;
  }
}
