/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  RenovaAvatarSatellite,
  RenovaAvatarSatelliteInterface,
} from "../../../contracts/nft/RenovaAvatarSatellite";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum IRenovaAvatarBase.RenovaFaction",
        name: "faction",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "characterId",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "UpdateCustomURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newWormhole",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "oldWormhole",
        type: "address",
      },
    ],
    name: "UpdateWormhole",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "newWormholeChainId",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "oldWormholeChainId",
        type: "uint16",
      },
    ],
    name: "UpdateWormholeChainId",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "newConsistencyLevel",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "oldConsistencyLevel",
        type: "uint8",
      },
    ],
    name: "UpdateWormholeConsistencyLevel",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "wormholeChainId",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "remote",
        type: "bytes32",
      },
    ],
    name: "UpdateWormholeRemote",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "emitterChainId",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "emitterAddress",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "sequence",
        type: "uint64",
      },
    ],
    name: "WormholeReceive",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "sequence",
        type: "uint64",
      },
    ],
    name: "WormholeSend",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum IRenovaAvatarBase.RenovaFaction",
        name: "faction",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "characterId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "srcWormholeChainId",
        type: "uint16",
      },
    ],
    name: "XChainMintIn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "characterIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "factions",
    outputs: [
      {
        internalType: "enum IRenovaAvatarBase.RenovaFaction",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "renovaCommandDeck",
        type: "address",
      },
      {
        internalType: "address",
        name: "wormhole",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "wormholeConsistencyLevel",
        type: "uint8",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "refreshAllMetadata",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "refreshMetadata",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "customBaseURI",
        type: "string",
      },
    ],
    name: "setCustomBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wormhole",
        type: "address",
      },
    ],
    name: "updateWormhole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "wormholeConsistencyLevel",
        type: "uint8",
      },
    ],
    name: "updateWormholeConsistencyLevel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "wormholeChainId",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "authorizedRemote",
        type: "bytes32",
      },
    ],
    name: "updateWormholeRemote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawRelayerFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "vaa",
        type: "bytes",
      },
    ],
    name: "wormholeMintReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506200001c62000022565b620000e3565b600054610100900460ff16156200008f5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811614620000e1576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b612ba980620000f36000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c80638da5cb5b116100f9578063bed20a8711610097578063d95ba42f11610071578063d95ba42f146103cc578063e985e9c5146103df578063f2fde38b1461041b578063fc97a3031461042e57600080fd5b8063bed20a871461039e578063c87b56dd146103a6578063cdf0ae76146103b957600080fd5b8063ad47f57d116100d3578063ad47f57d14610352578063aebb4ce914610365578063b88d4fde14610378578063bc7c63811461038b57600080fd5b80638da5cb5b1461032657806395d89b4114610337578063a22cb4651461033f57600080fd5b806347c13810116101665780636cc247e0116101405780636cc247e0146102e557806370a08231146102f8578063715018a61461030b57806389232a001461031357600080fd5b806347c138101461027457806361c8893c146102a25780636352211e146102d257600080fd5b8063095ea7b3116101a2578063095ea7b31461023157806323b872dd146102465780632b0e29741461025957806342842e0e1461026157600080fd5b806301ffc9a7146101c957806306fdde03146101f1578063081812fc14610206575b600080fd5b6101dc6101d736600461201d565b61044e565b60405190151581526020015b60405180910390f35b6101f9610479565b6040516101e8919061208a565b61021961021436600461209d565b61050b565b6040516001600160a01b0390911681526020016101e8565b61024461023f3660046120cb565b610532565b005b6102446102543660046120f7565b6105a5565b610244610613565b61024461026f3660046120f7565b61069d565b610294610282366004612138565b60e06020526000908152604090205481565b6040519081526020016101e8565b6102c56102b0366004612138565b60df6020526000908152604090205460ff1681565b6040516101e8919061218d565b6102196102e036600461209d565b6106bd565b6102446102f3366004612291565b61071d565b610294610306366004612138565b6107a9565b61024461082f565b6102446103213660046122e8565b6108a5565b6065546001600160a01b0316610219565b6101f96109bc565b61024461034d366004612341565b6109cb565b61024461036036600461237a565b610a44565b6102446103733660046123a7565b610a58565b6102446103863660046123e5565b610bbd565b610244610399366004612450565b610c35565b610244610d6d565b6101f96103b436600461209d565b610db2565b6102446103c7366004612138565b610e07565b6102446103da36600461209d565b610e18565b6101dc6103ed366004612484565b6001600160a01b03918216600090815260b06020908152604080832093909416825291909152205460ff1690565b610244610429366004612138565b610e50565b61029461043c366004612138565b60e16020526000908152604090205481565b60006001600160e01b03198216632483248360e11b1480610473575061047382610ec6565b92915050565b606060ab8054610488906124b2565b80601f01602080910402602001604051908101604052809291908181526020018280546104b4906124b2565b80156105015780601f106104d657610100808354040283529160200191610501565b820191906000526020600020905b8154815290600101906020018083116104e457829003601f168201915b5050505050905090565b600061051682610f16565b50600090815260af60205260409020546001600160a01b031690565b60405162461bcd60e51b815260206004820152603860248201527f52656e6f7661417661746172426173653a3a617070726f76652041766174617260448201527f7320617265206e6f6e2d7472616e736665727261626c652e000000000000000060648201526084015b60405180910390fd5b60405162461bcd60e51b815260206004820152603d60248201527f52656e6f7661417661746172426173653a3a7472616e7366657246726f6d204160448201527f76617461727320617265206e6f6e2d7472616e736665727261626c652e000000606482015260840161059c565b61061b610f75565b600047116106915760405162461bcd60e51b815260206004820152603f60248201527f576f726d686f6c65426173655570677261646561626c653a3a7769746864726160448201527f7752656c6179657246656573204e6f206665657320636f6c6c65637465642e00606482015260840161059c565b61069b3347610fcf565b565b6106b883838360405180602001604052806000815250610bbd565b505050565b600081815260ad60205260408120546001600160a01b0316806104735760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161059c565b610725610f75565b60dd610731828261253a565b507fa6079050ba457cec0a5a38490491927a6c30ecc1c27e7a9b060080b5278e3f3a60dd60405161076291906125f9565b60405180910390a1604080516001815260001960208201527f6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c91015b60405180910390a150565b60006001600160a01b0382166108135760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161059c565b506001600160a01b0316600090815260ae602052604090205490565b610837610f75565b60405162461bcd60e51b815260206004820152603e60248201527f52656e6f7661417661746172426173653a3a72656e6f756e63654f776e65727360448201527f6869702043616e6e6f742072656e6f756e6365206f776e6572736869702e0000606482015260840161059c565b600054610100900460ff16158080156108c55750600054600160ff909116105b806108df5750303b1580156108df575060005460ff166001145b6109425760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161059c565b6000805460ff191660011790558015610965576000805461ff0019166101001790555b6109708484846110e8565b80156109b6576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b606060ac8054610488906124b2565b60405162461bcd60e51b815260206004820152604260248201527f52656e6f7661417661746172426173653a3a736574417070726f76616c466f7260448201527f416c6c204176617461727320617265206e6f6e2d7472616e736665727261626c606482015261329760f11b608482015260a40161059c565b610a4c610f75565b610a558161120f565b50565b610a60610f75565b8161ffff16600003610aed5760405162461bcd60e51b815260206004820152604a60248201527f576f726d686f6c65426173655570677261646561626c653a3a7570646174655760448201527f6f726d686f6c6552656d6f746520776f726d686f6c65436861696e4964206361606482015269373737ba10313290181760b11b608482015260a40161059c565b80610b6a5760405162461bcd60e51b815260206004820152604160248201527f576f726d686f6c65426173655570677261646561626c653a3a7570646174655760448201527f6f726d686f6c6552656d6f74652052656d6f74652063616e6e6f7420626520306064820152601760f91b608482015260a40161059c565b61ffff8216600081815260996020908152604091829020849055815192835282018390527f35e23d9dc327a48e399315447f33b792cbdbee431b0f83f5c78ed734eb709fac910160405180910390a15050565b60405162461bcd60e51b815260206004820152604160248201527f52656e6f7661417661746172426173653a3a736166655472616e73666572467260448201527f6f6d204176617461727320617265206e6f6e2d7472616e736665727261626c656064820152601760f91b608482015260a40161059c565b600080610c4183611317565b91509150600080600080600085806020019051810190610c619190612694565b609a549499509297509095509350915061ffff808316911614610d125760405162461bcd60e51b815260206004820152605860248201527f52656e6f7661417661746172536174656c6c6974653a3a776f726d686f6c654d60448201527f696e7452656365697665204176617461722073686f756c64206265206d696e7460648201527f6564206f6e206120646966666572656e7420636861696e2e0000000000000000608482015260a40161059c565b610d1e858585856116e5565b836001600160a01b03167f5a185c1df79f0887309ca1880da2d1bb824bd18ae187878776ccc86bac10ba1584848a604051610d5b939291906126f9565b60405180910390a25050505050505050565b610d75610f75565b604080516001815260001960208201527f6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c910160405180910390a1565b60606000610dbf83611883565b90506000815111610ddf5760405180602001604052806000815250610e00565b80604051602001610df0919061271f565b6040516020818303038152906040525b9392505050565b610e0f610f75565b610a55816118d3565b610e20610f75565b6040518181527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79060200161079e565b610e58610f75565b6001600160a01b038116610ebd5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161059c565b610a5581611a74565b60006001600160e01b031982166380ac58cd60e01b1480610ef757506001600160e01b03198216635b5e139f60e01b145b8061047357506301ffc9a760e01b6001600160e01b0319831614610473565b600081815260ad60205260409020546001600160a01b0316610a555760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161059c565b6065546001600160a01b0316331461069b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161059c565b8047101561101f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e6365000000604482015260640161059c565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461106c576040519150601f19603f3d011682016040523d82523d6000602084013e611071565b606091505b50509050806106b85760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d61792068617665207265766572746564000000000000606482015260840161059c565b600054610100900460ff1661110f5760405162461bcd60e51b815260040161059c90612748565b6111198282611ac6565b6111646040518060400160405280600d81526020016c2932b737bb309020bb30ba30b960991b81525060405180604001604052806004815260200163524e564160e01b815250611ae4565b6001600160a01b0383166111eb5760405162461bcd60e51b815260206004820152604260248201527f52656e6f7661417661746172426173653a3a696e6974616c697a652072656e6f60448201527f7661436f6d6d616e644465636b2063616e6e6f74206265203020616464726573606482015261399760f11b608482015260a40161059c565b505060de80546001600160a01b0319166001600160a01b0392909216919091179055565b60008160ff16116112ae5760405162461bcd60e51b815260206004820152605d60248201527f576f726d686f6c65426173655570677261646561626c653a3a7570646174655760448201527f6f726d686f6c65436f6e73697374656e63794c6576656c20436f6e736973746560648201527f6e6379206c6576656c2063616e6e6f742062652073657420746f20302e000000608482015260a40161059c565b6097546040805160ff8085168252600160a01b90930490921660208301527f4776078413e31938cb5212df6c9a4ceb607c6f05445e7384623373bc2ac632c4910160405180910390a16097805460ff909216600160a01b0260ff60a01b19909216919091179055565b6097546000906060906001600160a01b03166113945760405162461bcd60e51b81526020600482015260426024820152600080516020612b5483398151915260448201527f6c655265636569766520576f726d686f6c65206973206e6f7420646566696e65606482015261321760f11b608482015260a40161059c565b609a5461ffff1661140f5760405162461bcd60e51b815260206004820152604b6024820152600080516020612b5483398151915260448201527f6c655265636569766520576f726d686f6c6520436861696e204944206973206e60648201526a37ba103232b334b732b21760a91b608482015260a40161059c565b60975460405163607ec5ef60e11b8152600091829182916001600160a01b03169063c0fd8bde9061144490899060040161208a565b600060405180830381865afa158015611461573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261148991908101906128e2565b9250925092508181906114af5760405162461bcd60e51b815260040161059c919061208a565b5061014083015160009081526098602052604090205460ff16156115375760405162461bcd60e51b815260206004820152604460248201819052600080516020612b54833981519152908201527f6c6552656365697665204d65737361676520616c72656164792070726f63657360648201526339b2b21760e11b608482015260a40161059c565b6101408301516000908152609860209081526040808320805460ff19166001179055606086015161ffff811684526099909252909120549095506115f75760405162461bcd60e51b81526020600482015260576024820152600080516020612b5483398151915260448201527f6c655265636569766520576f726d686f6c652072656d6f7465206e6f7420646560648201527f66696e6564206f6e20656d697474656420636861696e2e000000000000000000608482015260a40161059c565b608083015161ffff86166000908152609960205260409020541461167b5760405162461bcd60e51b81526020600482015260416024820152600080516020612b5483398151915260448201527f6c655265636569766520456d6974746572206e6f7420617574686f72697a65646064820152601760f91b608482015260a40161059c565b606080840151608085015160a08601516040805161ffff909416845260208401929092526001600160401b0316908201527fd013688f55d49dbb965d100e42f874e733aa2db9ced00ce62e643b6f47ecc22e910160405180910390a1505060e00151919391925050565b6116ee836107a9565b156117615760405162461bcd60e51b815260206004820152603f60248201527f52656e6f7661417661746172426173653a3a5f6d696e7441766174617220436160448201527f6e6e6f74206d696e74206d6f7265207468616e206f6e65204176617461722e00606482015260840161059c565b333b156117cd5760405162461bcd60e51b815260206004820152603460248201527f52656e6f7661417661746172426173653a3a5f6d696e7441766174617220436f604482015273373a3930b1ba399031b0b73737ba1036b4b73a1760611b606482015260840161059c565b6001600160a01b038316600090815260df60205260409020805483919060ff19166001838181111561180157611801612155565b02179055506001600160a01b038316600090815260e06020908152604080832084905560e190915290208490556118388385611b15565b826001600160a01b03167f5d77c9a8f889ac7333a5d3327f7858f4ca3a073565dd6e6b2053bbe12425387085848460405161187593929190612a39565b60405180910390a250505050565b606061188e82610f16565b6000611898611b2f565b905060008151116118b85760405180602001604052806000815250610e00565b806118c284611b3e565b604051602001610df0929190612a5b565b6001600160a01b03811661194f5760405162461bcd60e51b815260206004820152603d60248201527f576f726d686f6c65426173655570677261646561626c653a3a5f75706461746560448201527f576f726d686f6c6520416464726573732063616e6e6f7420626520302e000000606482015260840161059c565b609754604080516001600160a01b03808516825290921660208301527f24341e031c7687e9eeb2b18d176371aaf18c9cb7cc6574be31aa512b84a17ebc910160405180910390a1609780546001600160a01b0319166001600160a01b03831690811790915560408051634d4502c960e11b8152905160009291639a8a05929160048083019260209291908290030181865afa1580156119f2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a169190612a8a565b609a546040805161ffff808516825290921660208301529192507ff08a2a85a4e60e268b72b8ae59558a699797e81a58fa0767f74579aa0415d9a5910160405180910390a1609a805461ffff191661ffff9290921691909117905550565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611ace611bd0565b611ad7826118d3565b611ae08161120f565b5050565b600054610100900460ff16611b0b5760405162461bcd60e51b815260040161059c90612748565b611ae08282611bff565b611ae0828260405180602001604052806000815250611c3f565b606060dd8054610488906124b2565b60606000611b4b83611c72565b60010190506000816001600160401b03811115611b6a57611b6a61219b565b6040519080825280601f01601f191660200182016040528015611b94576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084611b9e57509392505050565b600054610100900460ff16611bf75760405162461bcd60e51b815260040161059c90612748565b61069b611d4a565b600054610100900460ff16611c265760405162461bcd60e51b815260040161059c90612748565b60ab611c32838261253a565b5060ac6106b8828261253a565b611c498383611d7a565b611c566000848484611f05565b6106b85760405162461bcd60e51b815260040161059c90612aa7565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310611cb15772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611cdd576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310611cfb57662386f26fc10000830492506010015b6305f5e1008310611d13576305f5e100830492506008015b6127108310611d2757612710830492506004015b60648310611d39576064830492506002015b600a83106104735760010192915050565b600054610100900460ff16611d715760405162461bcd60e51b815260040161059c90612748565b61069b33611a74565b6001600160a01b038216611dd05760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161059c565b600081815260ad60205260409020546001600160a01b031615611e355760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161059c565b600081815260ad60205260409020546001600160a01b031615611e9a5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161059c565b6001600160a01b038216600081815260ae602090815260408083208054600101905584835260ad90915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001600160a01b0384163b15611ffb57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611f49903390899088908890600401612af9565b6020604051808303816000875af1925050508015611f84575060408051601f3d908101601f19168201909252611f8191810190612b36565b60015b611fe1573d808015611fb2576040519150601f19603f3d011682016040523d82523d6000602084013e611fb7565b606091505b508051600003611fd95760405162461bcd60e51b815260040161059c90612aa7565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611fff565b5060015b949350505050565b6001600160e01b031981168114610a5557600080fd5b60006020828403121561202f57600080fd5b8135610e0081612007565b60005b8381101561205557818101518382015260200161203d565b50506000910152565b6000815180845261207681602086016020860161203a565b601f01601f19169290920160200192915050565b602081526000610e00602083018461205e565b6000602082840312156120af57600080fd5b5035919050565b6001600160a01b0381168114610a5557600080fd5b600080604083850312156120de57600080fd5b82356120e9816120b6565b946020939093013593505050565b60008060006060848603121561210c57600080fd5b8335612117816120b6565b92506020840135612127816120b6565b929592945050506040919091013590565b60006020828403121561214a57600080fd5b8135610e00816120b6565b634e487b7160e01b600052602160045260246000fd5b6002811061218957634e487b7160e01b600052602160045260246000fd5b9052565b60208101610473828461216b565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b03811182821017156121d3576121d361219b565b60405290565b60405161016081016001600160401b03811182821017156121d3576121d361219b565b604051601f8201601f191681016001600160401b03811182821017156122245761222461219b565b604052919050565b60006001600160401b038211156122455761224561219b565b50601f01601f191660200190565b60006122666122618461222c565b6121fc565b905082815283838301111561227a57600080fd5b828260208301376000602084830101529392505050565b6000602082840312156122a357600080fd5b81356001600160401b038111156122b957600080fd5b8201601f810184136122ca57600080fd5b611fff84823560208401612253565b60ff81168114610a5557600080fd5b6000806000606084860312156122fd57600080fd5b8335612308816120b6565b92506020840135612318816120b6565b91506040840135612328816122d9565b809150509250925092565b8015158114610a5557600080fd5b6000806040838503121561235457600080fd5b823561235f816120b6565b9150602083013561236f81612333565b809150509250929050565b60006020828403121561238c57600080fd5b8135610e00816122d9565b61ffff81168114610a5557600080fd5b600080604083850312156123ba57600080fd5b82356120e981612397565b600082601f8301126123d657600080fd5b610e0083833560208501612253565b600080600080608085870312156123fb57600080fd5b8435612406816120b6565b93506020850135612416816120b6565b92506040850135915060608501356001600160401b0381111561243857600080fd5b612444878288016123c5565b91505092959194509250565b60006020828403121561246257600080fd5b81356001600160401b0381111561247857600080fd5b611fff848285016123c5565b6000806040838503121561249757600080fd5b82356124a2816120b6565b9150602083013561236f816120b6565b600181811c908216806124c657607f821691505b6020821081036124e657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156106b857600081815260208120601f850160051c810160208610156125135750805b601f850160051c820191505b818110156125325782815560010161251f565b505050505050565b81516001600160401b038111156125535761255361219b565b6125678161256184546124b2565b846124ec565b602080601f83116001811461259c57600084156125845750858301515b600019600386901b1c1916600185901b178555612532565b600085815260208120601f198616915b828110156125cb578886015182559484019460019091019084016125ac565b50858210156125e95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208083526000845461260d816124b2565b8084870152604060018084166000811461262e576001811461264857612676565b60ff1985168984015283151560051b890183019550612676565b896000528660002060005b8581101561266e5781548b8201860152908301908801612653565b8a0184019650505b509398975050505050505050565b805161268f81612397565b919050565b600080600080600060a086880312156126ac57600080fd5b8551945060208601516126be816120b6565b6040870151909450600281106126d357600080fd5b6060870151608088015191945092506126eb81612397565b809150509295509295909350565b60608101612707828661216b565b83602083015261ffff83166040830152949350505050565b6000825161273181846020870161203a565b64173539b7b760d91b920191825250600501919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b805161268f816122d9565b805163ffffffff8116811461268f57600080fd5b80516001600160401b038116811461268f57600080fd5b600082601f8301126127da57600080fd5b81516127e86122618261222c565b8181528460208386010111156127fd57600080fd5b611fff82602083016020870161203a565b600082601f83011261281f57600080fd5b815160206001600160401b0382111561283a5761283a61219b565b612848818360051b016121fc565b82815260079290921b8401810191818101908684111561286757600080fd5b8286015b848110156128cc57608081890312156128845760008081fd5b61288c6121b1565b8151815284820151858201526040808301516128a7816122d9565b908201526060828101516128ba816122d9565b9082015283529183019160800161286b565b509695505050505050565b805161268f81612333565b6000806000606084860312156128f757600080fd5b83516001600160401b038082111561290e57600080fd5b90850190610160828803121561292357600080fd5b61292b6121d9565b61293483612793565b81526129426020840161279e565b60208201526129536040840161279e565b604082015261296460608401612684565b60608201526080830151608082015261297f60a084016127b2565b60a082015261299060c08401612793565b60c082015260e0830151828111156129a757600080fd5b6129b3898286016127c9565b60e0830152506101006129c781850161279e565b9082015261012083810151838111156129df57600080fd5b6129eb8a82870161280e565b918301919091525061014083810151908201529450612a0c602087016128d7565b93506040860151915080821115612a2257600080fd5b50612a2f868287016127c9565b9150509250925092565b83815260608101612a4d602083018561216b565b826040830152949350505050565b60008351612a6d81846020880161203a565b835190830190612a8181836020880161203a565b01949350505050565b600060208284031215612a9c57600080fd5b8151610e0081612397565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612b2c9083018461205e565b9695505050505050565b600060208284031215612b4857600080fd5b8151610e008161200756fe576f726d686f6c65426173655570677261646561626c653a3a5f776f726d686fa26469706673582212200eb2958774cd8ccb07da4d727b18a96728f38036c1a76fbca9985f0684b832f764736f6c63430008130033";

type RenovaAvatarSatelliteConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RenovaAvatarSatelliteConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RenovaAvatarSatellite__factory extends ContractFactory {
  constructor(...args: RenovaAvatarSatelliteConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      RenovaAvatarSatellite & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): RenovaAvatarSatellite__factory {
    return super.connect(runner) as RenovaAvatarSatellite__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RenovaAvatarSatelliteInterface {
    return new Interface(_abi) as RenovaAvatarSatelliteInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RenovaAvatarSatellite {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as RenovaAvatarSatellite;
  }
}
