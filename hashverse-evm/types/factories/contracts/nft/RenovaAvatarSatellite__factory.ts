/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  RenovaAvatarSatellite,
  RenovaAvatarSatelliteInterface,
} from "../../../contracts/nft/RenovaAvatarSatellite";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum IRenovaAvatarBase.RenovaFaction",
        name: "faction",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "enum IRenovaAvatarBase.RenovaRace",
        name: "race",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "enum IRenovaAvatarBase.RenovaGender",
        name: "gender",
        type: "uint8",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "uri",
        type: "string",
      },
    ],
    name: "UpdateCustomURI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newWormhole",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "oldWormhole",
        type: "address",
      },
    ],
    name: "UpdateWormhole",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "newWormholeChainId",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "oldWormholeChainId",
        type: "uint16",
      },
    ],
    name: "UpdateWormholeChainId",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "newConsistencyLevel",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "oldConsistencyLevel",
        type: "uint8",
      },
    ],
    name: "UpdateWormholeConsistencyLevel",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "wormholeChainId",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "remote",
        type: "bytes32",
      },
    ],
    name: "UpdateWormholeRemote",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "emitterChainId",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "emitterAddress",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "sequence",
        type: "uint64",
      },
    ],
    name: "WormholeReceive",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "sequence",
        type: "uint64",
      },
    ],
    name: "WormholeSend",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum IRenovaAvatarBase.RenovaFaction",
        name: "faction",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "enum IRenovaAvatarBase.RenovaRace",
        name: "race",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "enum IRenovaAvatarBase.RenovaGender",
        name: "gender",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "srcWormholeChainId",
        type: "uint16",
      },
    ],
    name: "XChainMintIn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "factions",
    outputs: [
      {
        internalType: "enum IRenovaAvatarBase.RenovaFaction",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "genders",
    outputs: [
      {
        internalType: "enum IRenovaAvatarBase.RenovaGender",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "renovaCommandDeck",
        type: "address",
      },
      {
        internalType: "address",
        name: "wormhole",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "wormholeConsistencyLevel",
        type: "uint8",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "races",
    outputs: [
      {
        internalType: "enum IRenovaAvatarBase.RenovaRace",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "refreshAllMetadata",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "refreshMetadata",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "customBaseURI",
        type: "string",
      },
    ],
    name: "setCustomBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "tokenIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wormhole",
        type: "address",
      },
    ],
    name: "updateWormhole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "wormholeConsistencyLevel",
        type: "uint8",
      },
    ],
    name: "updateWormholeConsistencyLevel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "wormholeChainId",
        type: "uint16",
      },
      {
        internalType: "bytes32",
        name: "authorizedRemote",
        type: "bytes32",
      },
    ],
    name: "updateWormholeRemote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawRelayerFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "vaa",
        type: "bytes",
      },
    ],
    name: "wormholeMintReceive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506200001c62000022565b620000e3565b600054610100900460ff16156200008f5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811614620000e1576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b612cbe80620000f36000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c806389232a0011610104578063bc7c6381116100a2578063d95ba42f11610071578063d95ba42f1461040a578063e985e9c51461041d578063f2fde38b14610459578063fc97a3031461046c57600080fd5b8063bc7c6381146103c9578063bed20a87146103dc578063c87b56dd146103e4578063cdf0ae76146103f757600080fd5b8063a22cb465116100de578063a22cb4651461037d578063ad47f57d14610390578063aebb4ce9146103a3578063b88d4fde146103b657600080fd5b806389232a00146103515780638da5cb5b1461036457806395d89b411461037557600080fd5b806342842e0e116101715780636cc247e01161014b5780636cc247e0146102e557806370a08231146102f8578063715018a61461031957806375b921341461032157600080fd5b806342842e0e1461029c57806361c8893c146102af5780636352211e146102d257600080fd5b8063081812fc116101ad578063081812fc14610241578063095ea7b31461026c57806323b872dd146102815780632b0e29741461029457600080fd5b806301ffc9a7146101d457806306fdde03146101fc57806307d2a10114610211575b600080fd5b6101e76101e23660046120c9565b61048c565b60405190151581526020015b60405180910390f35b6102046104b7565b6040516101f39190612136565b61023461021f36600461215e565b60e16020526000908152604090205460ff1681565b6040516101f391906121a1565b61025461024f3660046121b4565b610549565b6040516001600160a01b0390911681526020016101f3565b61027f61027a3660046121cd565b610570565b005b61027f61028f3660046121f9565b6105e3565b61027f610651565b61027f6102aa3660046121f9565b6106db565b6102346102bd36600461215e565b60df6020526000908152604090205460ff1681565b6102546102e03660046121b4565b6106fb565b61027f6102f3366004612330565b61075b565b61030b61030636600461215e565b6107e7565b6040519081526020016101f3565b61027f61086d565b61034461032f36600461215e565b60e06020526000908152604090205460ff1681565b6040516101f3919061238c565b61027f61035f3660046123a9565b6108e3565b6065546001600160a01b0316610254565b6102046109fa565b61027f61038b366004612402565b610a09565b61027f61039e36600461243b565b610a82565b61027f6103b1366004612468565b610a96565b61027f6103c43660046124a6565b610bfb565b61027f6103d7366004612511565b610c73565b61027f610db2565b6102046103f23660046121b4565b610df7565b61027f61040536600461215e565b610e4c565b61027f6104183660046121b4565b610e5d565b6101e761042b366004612545565b6001600160a01b03918216600090815260b06020908152604080832093909416825291909152205460ff1690565b61027f61046736600461215e565b610e95565b61030b61047a36600461215e565b60e26020526000908152604090205481565b60006001600160e01b03198216632483248360e11b14806104b157506104b182610f0b565b92915050565b606060ab80546104c690612573565b80601f01602080910402602001604051908101604052809291908181526020018280546104f290612573565b801561053f5780601f106105145761010080835404028352916020019161053f565b820191906000526020600020905b81548152906001019060200180831161052257829003601f168201915b5050505050905090565b600061055482610f5b565b50600090815260af60205260409020546001600160a01b031690565b60405162461bcd60e51b815260206004820152603860248201527f52656e6f7661417661746172426173653a3a617070726f76652041766174617260448201527f7320617265206e6f6e2d7472616e736665727261626c652e000000000000000060648201526084015b60405180910390fd5b60405162461bcd60e51b815260206004820152603d60248201527f52656e6f7661417661746172426173653a3a7472616e7366657246726f6d204160448201527f76617461727320617265206e6f6e2d7472616e736665727261626c652e00000060648201526084016105da565b610659610fba565b600047116106cf5760405162461bcd60e51b815260206004820152603f60248201527f576f726d686f6c65426173655570677261646561626c653a3a7769746864726160448201527f7752656c6179657246656573204e6f206665657320636f6c6c65637465642e0060648201526084016105da565b6106d93347611014565b565b6106f683838360405180602001604052806000815250610bfb565b505050565b600081815260ad60205260408120546001600160a01b0316806104b15760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016105da565b610763610fba565b60dd61076f82826125fb565b507fa6079050ba457cec0a5a38490491927a6c30ecc1c27e7a9b060080b5278e3f3a60dd6040516107a091906126ba565b60405180910390a1604080516001815260001960208201527f6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c91015b60405180910390a150565b60006001600160a01b0382166108515760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016105da565b506001600160a01b0316600090815260ae602052604090205490565b610875610fba565b60405162461bcd60e51b815260206004820152603e60248201527f52656e6f7661417661746172426173653a3a72656e6f756e63654f776e65727360448201527f6869702043616e6e6f742072656e6f756e6365206f776e6572736869702e000060648201526084016105da565b600054610100900460ff16158080156109035750600054600160ff909116105b8061091d5750303b15801561091d575060005460ff166001145b6109805760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105da565b6000805460ff1916600117905580156109a3576000805461ff0019166101001790555b6109ae84848461112d565b80156109f4576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b606060ac80546104c690612573565b60405162461bcd60e51b815260206004820152604260248201527f52656e6f7661417661746172426173653a3a736574417070726f76616c466f7260448201527f416c6c204176617461727320617265206e6f6e2d7472616e736665727261626c606482015261329760f11b608482015260a4016105da565b610a8a610fba565b610a9381611254565b50565b610a9e610fba565b8161ffff16600003610b2b5760405162461bcd60e51b815260206004820152604a60248201527f576f726d686f6c65426173655570677261646561626c653a3a7570646174655760448201527f6f726d686f6c6552656d6f746520776f726d686f6c65436861696e4964206361606482015269373737ba10313290181760b11b608482015260a4016105da565b80610ba85760405162461bcd60e51b815260206004820152604160248201527f576f726d686f6c65426173655570677261646561626c653a3a7570646174655760448201527f6f726d686f6c6552656d6f74652052656d6f74652063616e6e6f7420626520306064820152601760f91b608482015260a4016105da565b61ffff8216600081815260996020908152604091829020849055815192835282018390527f35e23d9dc327a48e399315447f33b792cbdbee431b0f83f5c78ed734eb709fac910160405180910390a15050565b60405162461bcd60e51b815260206004820152604160248201527f52656e6f7661417661746172426173653a3a736166655472616e73666572467260448201527f6f6d204176617461727320617265206e6f6e2d7472616e736665727261626c656064820152601760f91b608482015260a4016105da565b600080610c7f8361135c565b9150915060008060008060008086806020019051810190610ca09190612762565b609a54959b5093995091975095509350915061ffff808316911614610d535760405162461bcd60e51b815260206004820152605860248201527f52656e6f7661417661746172536174656c6c6974653a3a776f726d686f6c654d60448201527f696e7452656365697665204176617461722073686f756c64206265206d696e7460648201527f6564206f6e206120646966666572656e7420636861696e2e0000000000000000608482015260a4016105da565b610d60868686868661172a565b846001600160a01b03167faf8b222a26f209fb7ca98b31e7f668b832ea70ca2818a0df35f69fd52a3e10e68585858c604051610d9f94939291906127e3565b60405180910390a2505050505050505050565b610dba610fba565b604080516001815260001960208201527f6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c910160405180910390a1565b60606000610e048361192f565b90506000815111610e245760405180602001604052806000815250610e45565b80604051602001610e359190612822565b6040516020818303038152906040525b9392505050565b610e54610fba565b610a938161197f565b610e65610fba565b6040518181527ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7906020016107dc565b610e9d610fba565b6001600160a01b038116610f025760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105da565b610a9381611b20565b60006001600160e01b031982166380ac58cd60e01b1480610f3c57506001600160e01b03198216635b5e139f60e01b145b806104b157506301ffc9a760e01b6001600160e01b03198316146104b1565b600081815260ad60205260409020546001600160a01b0316610a935760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016105da565b6065546001600160a01b031633146106d95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105da565b804710156110645760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064016105da565b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146110b1576040519150601f19603f3d011682016040523d82523d6000602084013e6110b6565b606091505b50509050806106f65760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016105da565b600054610100900460ff166111545760405162461bcd60e51b81526004016105da9061284b565b61115e8282611b72565b6111a96040518060400160405280600d81526020016c2932b737bb309020bb30ba30b960991b81525060405180604001604052806004815260200163524e564160e01b815250611b90565b6001600160a01b0383166112305760405162461bcd60e51b815260206004820152604260248201527f52656e6f7661417661746172426173653a3a696e6974616c697a652072656e6f60448201527f7661436f6d6d616e644465636b2063616e6e6f74206265203020616464726573606482015261399760f11b608482015260a4016105da565b505060de80546001600160a01b0319166001600160a01b0392909216919091179055565b60008160ff16116112f35760405162461bcd60e51b815260206004820152605d60248201527f576f726d686f6c65426173655570677261646561626c653a3a7570646174655760448201527f6f726d686f6c65436f6e73697374656e63794c6576656c20436f6e736973746560648201527f6e6379206c6576656c2063616e6e6f742062652073657420746f20302e000000608482015260a4016105da565b6097546040805160ff8085168252600160a01b90930490921660208301527f4776078413e31938cb5212df6c9a4ceb607c6f05445e7384623373bc2ac632c4910160405180910390a16097805460ff909216600160a01b0260ff60a01b19909216919091179055565b6097546000906060906001600160a01b03166113d95760405162461bcd60e51b81526020600482015260426024820152600080516020612c6983398151915260448201527f6c655265636569766520576f726d686f6c65206973206e6f7420646566696e65606482015261321760f11b608482015260a4016105da565b609a5461ffff166114545760405162461bcd60e51b815260206004820152604b6024820152600080516020612c6983398151915260448201527f6c655265636569766520576f726d686f6c6520436861696e204944206973206e60648201526a37ba103232b334b732b21760a91b608482015260a4016105da565b60975460405163607ec5ef60e11b8152600091829182916001600160a01b03169063c0fd8bde90611489908990600401612136565b600060405180830381865afa1580156114a6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526114ce91908101906129e5565b9250925092508181906114f45760405162461bcd60e51b81526004016105da9190612136565b5061014083015160009081526098602052604090205460ff161561157c5760405162461bcd60e51b815260206004820152604460248201819052600080516020612c69833981519152908201527f6c6552656365697665204d65737361676520616c72656164792070726f63657360648201526339b2b21760e11b608482015260a4016105da565b6101408301516000908152609860209081526040808320805460ff19166001179055606086015161ffff8116845260999092529091205490955061163c5760405162461bcd60e51b81526020600482015260576024820152600080516020612c6983398151915260448201527f6c655265636569766520576f726d686f6c652072656d6f7465206e6f7420646560648201527f66696e6564206f6e20656d697474656420636861696e2e000000000000000000608482015260a4016105da565b608083015161ffff8616600090815260996020526040902054146116c05760405162461bcd60e51b81526020600482015260416024820152600080516020612c6983398151915260448201527f6c655265636569766520456d6974746572206e6f7420617574686f72697a65646064820152601760f91b608482015260a4016105da565b606080840151608085015160a08601516040805161ffff909416845260208401929092526001600160401b0316908201527fd013688f55d49dbb965d100e42f874e733aa2db9ced00ce62e643b6f47ecc22e910160405180910390a1505060e00151919391925050565b611733846107e7565b156117a65760405162461bcd60e51b815260206004820152603f60248201527f52656e6f7661417661746172426173653a3a5f6d696e7441766174617220436160448201527f6e6e6f74206d696e74206d6f7265207468616e206f6e65204176617461722e0060648201526084016105da565b333b156118125760405162461bcd60e51b815260206004820152603460248201527f52656e6f7661417661746172426173653a3a5f6d696e7441766174617220436f604482015273373a3930b1ba399031b0b73737ba1036b4b73a1760611b60648201526084016105da565b6001600160a01b038416600090815260df60205260409020805484919060ff1916600183818111156118465761184661217b565b02179055506001600160a01b038416600090815260e060205260409020805483919060ff191660018360038111156118805761188061217b565b02179055506001600160a01b038416600090815260e160205260409020805482919060ff1916600183818111156118b9576118b961217b565b02179055506001600160a01b038416600090815260e2602052604090208590556118e38486611bc1565b836001600160a01b03167f7f17e288f5974c8af4db868a0bbf2636e24713d920c7eedc36d00a199e77685584848460405161192093929190612b3c565b60405180910390a25050505050565b606061193a82610f5b565b6000611944611bdb565b905060008151116119645760405180602001604052806000815250610e45565b8061196e84611bea565b604051602001610e35929190612b70565b6001600160a01b0381166119fb5760405162461bcd60e51b815260206004820152603d60248201527f576f726d686f6c65426173655570677261646561626c653a3a5f75706461746560448201527f576f726d686f6c6520416464726573732063616e6e6f7420626520302e00000060648201526084016105da565b609754604080516001600160a01b03808516825290921660208301527f24341e031c7687e9eeb2b18d176371aaf18c9cb7cc6574be31aa512b84a17ebc910160405180910390a1609780546001600160a01b0319166001600160a01b03831690811790915560408051634d4502c960e11b8152905160009291639a8a05929160048083019260209291908290030181865afa158015611a9e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ac29190612b9f565b609a546040805161ffff808516825290921660208301529192507ff08a2a85a4e60e268b72b8ae59558a699797e81a58fa0767f74579aa0415d9a5910160405180910390a1609a805461ffff191661ffff9290921691909117905550565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611b7a611c7c565b611b838261197f565b611b8c81611254565b5050565b600054610100900460ff16611bb75760405162461bcd60e51b81526004016105da9061284b565b611b8c8282611cab565b611b8c828260405180602001604052806000815250611ceb565b606060dd80546104c690612573565b60606000611bf783611d1e565b60010190506000816001600160401b03811115611c1657611c1661223a565b6040519080825280601f01601f191660200182016040528015611c40576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084611c4a57509392505050565b600054610100900460ff16611ca35760405162461bcd60e51b81526004016105da9061284b565b6106d9611df6565b600054610100900460ff16611cd25760405162461bcd60e51b81526004016105da9061284b565b60ab611cde83826125fb565b5060ac6106f682826125fb565b611cf58383611e26565b611d026000848484611fb1565b6106f65760405162461bcd60e51b81526004016105da90612bbc565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310611d5d5772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611d89576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310611da757662386f26fc10000830492506010015b6305f5e1008310611dbf576305f5e100830492506008015b6127108310611dd357612710830492506004015b60648310611de5576064830492506002015b600a83106104b15760010192915050565b600054610100900460ff16611e1d5760405162461bcd60e51b81526004016105da9061284b565b6106d933611b20565b6001600160a01b038216611e7c5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016105da565b600081815260ad60205260409020546001600160a01b031615611ee15760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016105da565b600081815260ad60205260409020546001600160a01b031615611f465760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016105da565b6001600160a01b038216600081815260ae602090815260408083208054600101905584835260ad90915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b60006001600160a01b0384163b156120a757604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611ff5903390899088908890600401612c0e565b6020604051808303816000875af1925050508015612030575060408051601f3d908101601f1916820190925261202d91810190612c4b565b60015b61208d573d80801561205e576040519150601f19603f3d011682016040523d82523d6000602084013e612063565b606091505b5080516000036120855760405162461bcd60e51b81526004016105da90612bbc565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506120ab565b5060015b949350505050565b6001600160e01b031981168114610a9357600080fd5b6000602082840312156120db57600080fd5b8135610e45816120b3565b60005b838110156121015781810151838201526020016120e9565b50506000910152565b600081518084526121228160208601602086016120e6565b601f01601f19169290920160200192915050565b602081526000610e45602083018461210a565b6001600160a01b0381168114610a9357600080fd5b60006020828403121561217057600080fd5b8135610e4581612149565b634e487b7160e01b600052602160045260246000fd5b60028110610a9357610a9361217b565b602081016121ae83612191565b91905290565b6000602082840312156121c657600080fd5b5035919050565b600080604083850312156121e057600080fd5b82356121eb81612149565b946020939093013593505050565b60008060006060848603121561220e57600080fd5b833561221981612149565b9250602084013561222981612149565b929592945050506040919091013590565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b03811182821017156122725761227261223a565b60405290565b60405161016081016001600160401b03811182821017156122725761227261223a565b604051601f8201601f191681016001600160401b03811182821017156122c3576122c361223a565b604052919050565b60006001600160401b038211156122e4576122e461223a565b50601f01601f191660200190565b6000612305612300846122cb565b61229b565b905082815283838301111561231957600080fd5b828260208301376000602084830101529392505050565b60006020828403121561234257600080fd5b81356001600160401b0381111561235857600080fd5b8201601f8101841361236957600080fd5b6120ab848235602084016122f2565b600481106123885761238861217b565b9052565b602081016104b18284612378565b60ff81168114610a9357600080fd5b6000806000606084860312156123be57600080fd5b83356123c981612149565b925060208401356123d981612149565b915060408401356123e98161239a565b809150509250925092565b8015158114610a9357600080fd5b6000806040838503121561241557600080fd5b823561242081612149565b91506020830135612430816123f4565b809150509250929050565b60006020828403121561244d57600080fd5b8135610e458161239a565b61ffff81168114610a9357600080fd5b6000806040838503121561247b57600080fd5b82356121eb81612458565b600082601f83011261249757600080fd5b610e45838335602085016122f2565b600080600080608085870312156124bc57600080fd5b84356124c781612149565b935060208501356124d781612149565b92506040850135915060608501356001600160401b038111156124f957600080fd5b61250587828801612486565b91505092959194509250565b60006020828403121561252357600080fd5b81356001600160401b0381111561253957600080fd5b6120ab84828501612486565b6000806040838503121561255857600080fd5b823561256381612149565b9150602083013561243081612149565b600181811c9082168061258757607f821691505b6020821081036125a757634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156106f657600081815260208120601f850160051c810160208610156125d45750805b601f850160051c820191505b818110156125f3578281556001016125e0565b505050505050565b81516001600160401b038111156126145761261461223a565b612628816126228454612573565b846125ad565b602080601f83116001811461265d57600084156126455750858301515b600019600386901b1c1916600185901b1785556125f3565b600085815260208120601f198616915b8281101561268c5788860151825594840194600190910190840161266d565b50858210156126aa5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006020808352600084546126ce81612573565b808487015260406001808416600081146126ef576001811461270957612737565b60ff1985168984015283151560051b890183019550612737565b896000528660002060005b8581101561272f5781548b8201860152908301908801612714565b8a0184019650505b509398975050505050505050565b60028110610a9357600080fd5b805161275d81612458565b919050565b60008060008060008060c0878903121561277b57600080fd5b86519550602087015161278d81612149565b604088015190955061279e81612745565b6060880151909450600481106127b357600080fd5b60808801519093506127c481612745565b60a08801519092506127d581612458565b809150509295509295509295565b608081016127f086612191565b8582526128006020830186612378565b61280984612191565b83604083015261ffff8316606083015295945050505050565b600082516128348184602087016120e6565b64173539b7b760d91b920191825250600501919050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b805161275d8161239a565b805163ffffffff8116811461275d57600080fd5b80516001600160401b038116811461275d57600080fd5b600082601f8301126128dd57600080fd5b81516128eb612300826122cb565b81815284602083860101111561290057600080fd5b6120ab8260208301602087016120e6565b600082601f83011261292257600080fd5b815160206001600160401b0382111561293d5761293d61223a565b61294b818360051b0161229b565b82815260079290921b8401810191818101908684111561296a57600080fd5b8286015b848110156129cf57608081890312156129875760008081fd5b61298f612250565b8151815284820151858201526040808301516129aa8161239a565b908201526060828101516129bd8161239a565b9082015283529183019160800161296e565b509695505050505050565b805161275d816123f4565b6000806000606084860312156129fa57600080fd5b83516001600160401b0380821115612a1157600080fd5b908501906101608288031215612a2657600080fd5b612a2e612278565b612a3783612896565b8152612a45602084016128a1565b6020820152612a56604084016128a1565b6040820152612a6760608401612752565b606082015260808301516080820152612a8260a084016128b5565b60a0820152612a9360c08401612896565b60c082015260e083015182811115612aaa57600080fd5b612ab6898286016128cc565b60e083015250610100612aca8185016128a1565b908201526101208381015183811115612ae257600080fd5b612aee8a828701612911565b918301919091525061014083810151908201529450612b0f602087016129da565b93506040860151915080821115612b2557600080fd5b50612b32868287016128cc565b9150509250925092565b60608101612b4985612191565b848252612b596020830185612378565b612b6283612191565b826040830152949350505050565b60008351612b828184602088016120e6565b835190830190612b968183602088016120e6565b01949350505050565b600060208284031215612bb157600080fd5b8151610e4581612458565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612c419083018461210a565b9695505050505050565b600060208284031215612c5d57600080fd5b8151610e45816120b356fe576f726d686f6c65426173655570677261646561626c653a3a5f776f726d686fa2646970667358221220c3e0b4c8fd6db2a228d7c496513936aba4778f94e509cf0ee82a633363345ad364736f6c63430008130033";

type RenovaAvatarSatelliteConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RenovaAvatarSatelliteConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RenovaAvatarSatellite__factory extends ContractFactory {
  constructor(...args: RenovaAvatarSatelliteConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      RenovaAvatarSatellite & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): RenovaAvatarSatellite__factory {
    return super.connect(runner) as RenovaAvatarSatellite__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RenovaAvatarSatelliteInterface {
    return new Interface(_abi) as RenovaAvatarSatelliteInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): RenovaAvatarSatellite {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as RenovaAvatarSatellite;
  }
}
