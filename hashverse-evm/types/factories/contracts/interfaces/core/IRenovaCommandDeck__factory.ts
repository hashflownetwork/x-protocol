/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IRenovaCommandDeck,
  IRenovaCommandDeckInterface,
} from "../../../../contracts/interfaces/core/IRenovaCommandDeck";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "questId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "address",
        name: "questAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum IRenovaQuest.QuestMode",
        name: "questMode",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxPlayers",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxItemsPerPlayer",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
    ],
    name: "CreateQuest",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newRouter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "oldRouter",
        type: "address",
      },
    ],
    name: "UpdateHashflowRouter",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newQuestOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "oldQuestOwner",
        type: "address",
      },
    ],
    name: "UpdateQuestOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "rootId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "UploadItemMerkleRoot",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "questId",
        type: "bytes32",
      },
      {
        internalType: "enum IRenovaQuest.QuestMode",
        name: "questMode",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "maxPlayers",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxItemsPerPlayer",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
    ],
    name: "createQuest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
        ],
        internalType: "struct IRenovaQuest.TokenDeposit[]",
        name: "tokenDeposits",
        type: "tuple[]",
      },
    ],
    name: "depositTokensForQuest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "hashflowRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "renovaAvatar",
        type: "address",
      },
      {
        internalType: "address",
        name: "renovaItem",
        type: "address",
      },
      {
        internalType: "address",
        name: "hashflowRouter",
        type: "address",
      },
      {
        internalType: "address",
        name: "questOwner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "rootId",
        type: "bytes32",
      },
    ],
    name: "itemMerkleRoots",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "loadItemsForQuest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "hashverseItemId",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "rootId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "mintIdx",
        type: "uint256",
      },
      {
        internalType: "bytes32[]",
        name: "proof",
        type: "bytes32[]",
      },
    ],
    name: "mintItem",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenOwner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "hashverseItemId",
        type: "uint256",
      },
    ],
    name: "mintItemAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "questId",
        type: "bytes32",
      },
    ],
    name: "questDeploymentAddresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "questAddress",
        type: "address",
      },
    ],
    name: "questIdsByDeploymentAddress",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "questOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renovaAvatar",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renovaItem",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "hashflowRouter",
        type: "address",
      },
    ],
    name: "updateHashflowRouter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "questOwner",
        type: "address",
      },
    ],
    name: "updateQuestOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "rootId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "root",
        type: "bytes32",
      },
    ],
    name: "uploadItemMerkleRoot",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IRenovaCommandDeck__factory {
  static readonly abi = _abi;
  static createInterface(): IRenovaCommandDeckInterface {
    return new Interface(_abi) as IRenovaCommandDeckInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IRenovaCommandDeck {
    return new Contract(address, _abi, runner) as unknown as IRenovaCommandDeck;
  }
}
