/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  TestERC1271,
  TestERC1271Interface,
} from "../../../../contracts/test/TestERC1721.sol/TestERC1271";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        internalType: "uint128",
        name: "amount",
        type: "uint128",
      },
      {
        internalType: "uint16",
        name: "daysToStake",
        type: "uint16",
      },
    ],
    name: "boostHFTStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "isValidSignature",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "targetVault",
        type: "address",
      },
    ],
    name: "transferHFTStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161079f38038061079f83398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b60805161071561008a600039600060cd01526107156000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631626ba7e146100515780636a93cb5a14610081578063c04229ad14610096578063e1f21c67146100a9575b600080fd5b61006461005f3660046104fe565b6100bc565b6040516001600160e01b0319909116815260200160405180910390f35b61009461008f3660046105d5565b610120565b005b6100946100a4366004610608565b61017f565b6100946100b7366004610664565b6101f0565b6000806100c98484610269565b90507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b0316036101145750630b135d3f60e11b905061011a565b50600090505b92915050565b6040516306bf9aed60e51b81526001600160a01b03828116600483015283169063d7f35da090602401600060405180830381600087803b15801561016357600080fd5b505af1158015610177573d6000803e3d6000fd5b505050505050565b604051631839099d60e11b81526001600160801b038316600482015261ffff821660248201526001600160a01b03841690633072133a90604401600060405180830381600087803b1580156101d357600080fd5b505af11580156101e7573d6000803e3d6000fd5b50505050505050565b60405163095ea7b360e01b81526001600160a01b0383811660048301526024820183905284169063095ea7b3906044016020604051808303816000875af115801561023f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026391906106a0565b50505050565b6000806000610278858561028d565b91509150610285816102d2565b509392505050565b60008082516041036102c35760208301516040840151606085015160001a6102b787828585610424565b945094505050506102cb565b506000905060025b9250929050565b60008160048111156102e6576102e66106c9565b036102ee5750565b6001816004811115610302576103026106c9565b036103545760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064015b60405180910390fd5b6002816004811115610368576103686106c9565b036103b55760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161034b565b60038160048111156103c9576103c96106c9565b036104215760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161034b565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561045b57506000905060036104df565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156104af573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166104d8576000600192509250506104df565b9150600090505b94509492505050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561051157600080fd5b82359150602083013567ffffffffffffffff8082111561053057600080fd5b818501915085601f83011261054457600080fd5b813581811115610556576105566104e8565b604051601f8201601f19908116603f0116810190838211818310171561057e5761057e6104e8565b8160405282815288602084870101111561059757600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b80356001600160a01b03811681146105d057600080fd5b919050565b600080604083850312156105e857600080fd5b6105f1836105b9565b91506105ff602084016105b9565b90509250929050565b60008060006060848603121561061d57600080fd5b610626846105b9565b925060208401356001600160801b038116811461064257600080fd5b9150604084013561ffff8116811461065957600080fd5b809150509250925092565b60008060006060848603121561067957600080fd5b610682846105b9565b9250610690602085016105b9565b9150604084013590509250925092565b6000602082840312156106b257600080fd5b815180151581146106c257600080fd5b9392505050565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220e52513f5bee1d5245b557663b1e8f87bc7bb395b94e58251d7a57ceb8ddfe6a964736f6c63430008130033";

type TestERC1271ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestERC1271ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestERC1271__factory extends ContractFactory {
  constructor(...args: TestERC1271ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    signer: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(signer, overrides || {});
  }
  override deploy(
    signer: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(signer, overrides || {}) as Promise<
      TestERC1271 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): TestERC1271__factory {
    return super.connect(runner) as TestERC1271__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestERC1271Interface {
    return new Interface(_abi) as TestERC1271Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): TestERC1271 {
    return new Contract(address, _abi, runner) as unknown as TestERC1271;
  }
}
