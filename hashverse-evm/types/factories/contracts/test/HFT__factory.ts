/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type { HFT, HFTInterface } from "../../../contracts/test/HFT";

const _abi = [
  {
    inputs: [],
    name: "InvalidShortString",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "str",
        type: "string",
      },
    ],
    name: "StringTooLong",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "EIP712DomainChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      {
        internalType: "bytes1",
        name: "fields",
        type: "bytes1",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "verifyingContract",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "salt",
        type: "bytes32",
      },
      {
        internalType: "uint256[]",
        name: "extensions",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101606040523480156200001257600080fd5b506040518060400160405280600881526020016748617368666c6f7760c01b81525080604051806040016040528060018152602001603160f81b8152506040518060400160405280600881526020016748617368666c6f7760c01b8152506040518060400160405280600381526020016212119560ea1b81525081600390816200009d919062000297565b506004620000ac828262000297565b50620000be915083905060056200016d565b61012052620000cf8160066200016d565b61014052815160208084019190912060e052815190820120610100524660a0526200015d60e05161010051604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201529081019290925260608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b60805250503060c05250620003d8565b60006020835110156200018d576200018583620001a6565b9050620001a0565b816200019a848262000297565b5060ff90505b92915050565b600080829050601f81511115620001dd578260405163305a27a960e01b8152600401620001d4919062000363565b60405180910390fd5b8051620001ea82620003b3565b179392505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200021d57607f821691505b6020821081036200023e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200029257600081815260208120601f850160051c810160208610156200026d5750805b601f850160051c820191505b818110156200028e5782815560010162000279565b5050505b505050565b81516001600160401b03811115620002b357620002b3620001f2565b620002cb81620002c4845462000208565b8462000244565b602080601f831160018114620003035760008415620002ea5750858301515b600019600386901b1c1916600185901b1785556200028e565b600085815260208120601f198616915b82811015620003345788860151825594840194600190910190840162000313565b5085821015620003535787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208083528351808285015260005b81811015620003925785810183015185820160400152820162000374565b506000604082860101526040601f19601f8301168501019250505092915050565b805160208083015191908110156200023e5760001960209190910360031b1b16919050565b60805160a05160c05160e0516101005161012051610140516111dd6200043360003960006103bb0152600061039001526000610a5301526000610a2b01526000610986015260006109b0015260006109da01526111dd6000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d714610209578063a9059cbb1461021c578063d505accf1461022f578063dd62ed3e1461024257600080fd5b806370a08231146101aa5780637ecebe00146101d357806384b0196e146101e657806395d89b411461020157600080fd5b8063313ce567116100d3578063313ce5671461016b5780633644e5151461017a578063395093511461018257806340c10f191461019557600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd14610158575b600080fd5b61010d610255565b60405161011a9190610f49565b60405180910390f35b610136610131366004610f7f565b6102e7565b604051901515815260200161011a565b6002545b60405190815260200161011a565b610136610166366004610fa9565b610301565b6040516012815260200161011a565b61014a610325565b610136610190366004610f7f565b610334565b6101a86101a3366004610f7f565b610356565b005b61014a6101b8366004610fe5565b6001600160a01b031660009081526020819052604090205490565b61014a6101e1366004610fe5565b610364565b6101ee610382565b60405161011a9796959493929190611000565b61010d61040b565b610136610217366004610f7f565b61041a565b61013661022a366004610f7f565b61049a565b6101a861023d366004611096565b6104a8565b61014a610250366004611109565b61060c565b6060600380546102649061113c565b80601f01602080910402602001604051908101604052809291908181526020018280546102909061113c565b80156102dd5780601f106102b2576101008083540402835291602001916102dd565b820191906000526020600020905b8154815290600101906020018083116102c057829003601f168201915b5050505050905090565b6000336102f5818585610637565b60019150505b92915050565b60003361030f85828561075b565b61031a8585856107d5565b506001949350505050565b600061032f610979565b905090565b6000336102f5818585610347838361060c565b6103519190611170565b610637565b6103608282610aa4565b5050565b6001600160a01b0381166000908152600760205260408120546102fb565b6000606080828080836103b67f00000000000000000000000000000000000000000000000000000000000000006005610b63565b6103e17f00000000000000000000000000000000000000000000000000000000000000006006610b63565b60408051600080825260208201909252600f60f81b9b939a50919850469750309650945092509050565b6060600480546102649061113c565b60003381610428828661060c565b90508381101561048d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61031a8286868403610637565b6000336102f58185856107d5565b834211156104f85760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610484565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886105278c610c0e565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061058282610c36565b9050600061059282878787610c63565b9050896001600160a01b0316816001600160a01b0316146105f55760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610484565b6106008a8a8a610637565b50505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166106995760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610484565b6001600160a01b0382166106fa5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610484565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610767848461060c565b905060001981146107cf57818110156107c25760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610484565b6107cf8484848403610637565b50505050565b6001600160a01b0383166108395760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610484565b6001600160a01b03821661089b5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610484565b6001600160a01b038316600090815260208190526040902054818110156109135760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610484565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36107cf565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156109d257507f000000000000000000000000000000000000000000000000000000000000000046145b156109fc57507f000000000000000000000000000000000000000000000000000000000000000090565b61032f604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f0000000000000000000000000000000000000000000000000000000000000000918101919091527f000000000000000000000000000000000000000000000000000000000000000060608201524660808201523060a082015260009060c00160405160208183030381529060405280519060200120905090565b6001600160a01b038216610afa5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610484565b8060026000828254610b0c9190611170565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b606060ff8314610b7d57610b7683610c8b565b90506102fb565b818054610b899061113c565b80601f0160208091040260200160405190810160405280929190818152602001828054610bb59061113c565b8015610c025780601f10610bd757610100808354040283529160200191610c02565b820191906000526020600020905b815481529060010190602001808311610be557829003601f168201915b505050505090506102fb565b6001600160a01b03811660009081526007602052604090208054600181018255905b50919050565b60006102fb610c43610979565b8360405161190160f01b8152600281019290925260228201526042902090565b6000806000610c7487878787610cca565b91509150610c8181610d8e565b5095945050505050565b60606000610c9883610edb565b604080516020808252818301909252919250600091906020820181803683375050509182525060208101929092525090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610d015750600090506003610d85565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610d55573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610d7e57600060019250925050610d85565b9150600090505b94509492505050565b6000816004811115610da257610da2611191565b03610daa5750565b6001816004811115610dbe57610dbe611191565b03610e0b5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610484565b6002816004811115610e1f57610e1f611191565b03610e6c5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610484565b6003816004811115610e8057610e80611191565b03610ed85760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610484565b50565b600060ff8216601f8111156102fb57604051632cd44ac360e21b815260040160405180910390fd5b6000815180845260005b81811015610f2957602081850181015186830182015201610f0d565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610f5c6020830184610f03565b9392505050565b80356001600160a01b0381168114610f7a57600080fd5b919050565b60008060408385031215610f9257600080fd5b610f9b83610f63565b946020939093013593505050565b600080600060608486031215610fbe57600080fd5b610fc784610f63565b9250610fd560208501610f63565b9150604084013590509250925092565b600060208284031215610ff757600080fd5b610f5c82610f63565b60ff60f81b881681526000602060e08184015261102060e084018a610f03565b8381036040850152611032818a610f03565b606085018990526001600160a01b038816608086015260a0850187905284810360c0860152855180825283870192509083019060005b8181101561108457835183529284019291840191600101611068565b50909c9b505050505050505050505050565b600080600080600080600060e0888a0312156110b157600080fd5b6110ba88610f63565b96506110c860208901610f63565b95506040880135945060608801359350608088013560ff811681146110ec57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561111c57600080fd5b61112583610f63565b915061113360208401610f63565b90509250929050565b600181811c9082168061115057607f821691505b602082108103610c3057634e487b7160e01b600052602260045260246000fd5b808201808211156102fb57634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fdfea26469706673582212205779616b43d33923cacc0fd01aaa8470bd577a54dfdb40ab02daece4c018983064736f6c63430008130033";

type HFTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HFTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HFT__factory extends ContractFactory {
  constructor(...args: HFTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      HFT & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): HFT__factory {
    return super.connect(runner) as HFT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HFTInterface {
    return new Interface(_abi) as HFTInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): HFT {
    return new Contract(address, _abi, runner) as unknown as HFT;
  }
}
