/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  HashflowFactory,
  HashflowFactoryInterface,
} from "../../contracts/HashflowFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "operations",
        type: "address",
      },
    ],
    name: "CreatePool",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "poolCreator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "authorizationStatus",
        type: "bool",
      },
    ],
    name: "UpdatePoolCreatorAuthorization",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "poolImpl",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "prevPoolImpl",
        type: "address",
      },
    ],
    name: "UpdatePoolImplementation",
    type: "event",
  },
  {
    inputs: [],
    name: "_poolImpl",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowedPoolCreators",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "createPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "router",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "poolCreator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    name: "updatePoolCreatorAuthorization",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "poolImpl",
        type: "address",
      },
    ],
    name: "updatePoolImpl",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b610096565b600180546001600160a01b031916905561004381610046602090811b61096117901c565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610e47806100a56000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80639be05ec2116100715780639be05ec21461014e578063c4d66de814610161578063dc52eba814610174578063e30c397814610187578063f2fde38b14610198578063f887ea40146101ab57600080fd5b80631e011a49146100b95780631fe9f138146100f157806324470f9914610106578063715018a61461011957806379ba5097146101215780638da5cb5b14610129575b600080fd5b6100dc6100c7366004610cc4565b60046020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6101046100ff366004610ce6565b6101be565b005b610104610114366004610cc4565b6102c5565b610104610458565b6101046104c3565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100e8565b600354610136906001600160a01b031681565b61010461016f366004610cc4565b61053d565b610104610182366004610d22565b6106f9565b6001546001600160a01b0316610136565b6101046101a6366004610cc4565b6108f0565b600254610136906001600160a01b031681565b6101c66109b1565b6001600160a01b0382166102615760405162461bcd60e51b815260206004820152605160248201527f48617368666c6f77466163746f72793a3a757064617465506f6f6c437265617460448201527f6f72417574686f72697a6174696f6e20506f6f6c2063726561746f722063616e6064820152703737ba10313290181030b2323932b9b99760791b608482015260a4015b60405180910390fd5b6001600160a01b038216600081815260046020908152604091829020805460ff19168515159081179091558251938452908301527f949168ee3168291e309d38272d386b86d39acaa10ae1d217db1f15074712e97a91015b60405180910390a15050565b6102cd6109b1565b6001600160a01b0381163b61035a5760405162461bcd60e51b815260206004820152604760248201527f48617368666c6f77466163746f72793a3a757064617465506f6f6c496d706c2060448201527f506f6f6c20496d706c656d656e746174696f6e206d757374206265206120636f606482015266373a3930b1ba1760c91b608482015260a401610258565b6003546001600160a01b0316156103ef5760405162461bcd60e51b815260206004820152604d60248201527f48617368666c6f77466163746f72793a3a757064617465506f6f6c496d706c2060448201527f506f6f6c20496d706c656d656e746174696f6e2063616e6e6f7420626520726560648201526c16b4b734ba34b0b634bd32b21760991b608482015260a401610258565b600354604080516001600160a01b03808516825290921660208301527f0617fd31aa5ab95ec80eefc1eb61a2c477aa419d1d761b4e46f5f077e47852aa910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b6104606109b1565b60405162461bcd60e51b815260206004820152603260248201527f48617368666c6f77466163746f72793a2052656e6f756e63696e67206f776e656044820152713939b434b8103737ba1030b63637bbb2b21760711b6064820152608401610258565b60015433906001600160a01b031681146105315760405162461bcd60e51b815260206004820152602960248201527f4f776e61626c6532537465703a2063616c6c6572206973206e6f7420746865206044820152683732bb9037bbb732b960b91b6064820152608401610258565b61053a81610a11565b50565b600154600160a81b900460ff1615808015610563575060018054600160a01b900460ff16105b806105835750303b158015610583575060018054600160a01b900460ff16145b6105e65760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610258565b6001805460ff60a01b1916600160a01b1790558015610613576001805460ff60a81b1916600160a81b1790555b61061b6109b1565b6001600160a01b0382166106975760405162461bcd60e51b815260206004820152603760248201527f48617368666c6f77466163746f72793a3a696e697469616c697a6520526f757460448201527f65722063616e6e6f74206265203020616464726573732e0000000000000000006064820152608401610258565b600280546001600160a01b0319166001600160a01b03841617905580156106f5576001805460ff60a81b191681556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020016102b9565b5050565b3360009081526004602052604090205460ff1661076c5760405162461bcd60e51b815260206004820152602b60248201527f48617368666c6f77466163746f72793a3a637265617465506f6f6c204e6f742060448201526a30baba3437b934bd32b21760a91b6064820152608401610258565b6002546001600160a01b03166107ea5760405162461bcd60e51b815260206004820152603c60248201527f48617368666c6f77466163746f72793a3a637265617465506f6f6c20526f757460448201527f657220686173206e6f74206265656e20696e697469616c697a65642e000000006064820152608401610258565b600061083684848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508692506108319150610a0d9050565b610a2a565b6002546040516388fe1e0560e01b81526001600160a01b038084166004830152600160248301529293509116906388fe1e0590604401600060405180830381600087803b15801561088657600080fd5b505af115801561089a573d6000803e3d6000fd5b505050507fdbd2a1ea6808362e6adbec4db4969cbc11e3b0b28fb6c74cb342defaaf1daada816108c73390565b604080516001600160a01b0393841681529290911660208301520160405180910390a150505050565b6108f86109b1565b600180546001600160a01b0383166001600160a01b031990911681179091556109296000546001600160a01b031690565b6001600160a01b03167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000546001600160a01b03163314610a0b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610258565b565b3390565b600180546001600160a01b031916905561053a81610961565b600080845111610aa25760405162461bcd60e51b815260206004820152603a60248201527f48617368666c6f77466163746f72793a3a5f637265617465506f6f6c496e746560448201527f726e616c204e616d652063616e6e6f7420626520656d7074792e0000000000006064820152608401610258565b6003546001600160a01b0316610b22576040805162461bcd60e51b81526020600482015260248101919091527f486173666c6f77466163746f72793a3a5f637265617465506f6f6c496e74657260448201527f6e616c20506f6f6c20696d706c656d656e746174696f6e206e6f74207365742e6064820152608401610258565b600354600090610b3a906001600160a01b0316610c13565b600254604051633cd208ad60e21b81529192506001600160a01b038084169263f34822b492610b73928a928a928a921690600401610da3565b600060405180830381600087803b158015610b8d57600080fd5b505af1158015610ba1573d6000803e3d6000fd5b5050506001600160a01b0382169050610c0b5760405162461bcd60e51b815260206004820152602660248201527f48617368666c6f77466163746f72793a206e657720706f6f6c2069732030206160448201526564647265737360d01b6064820152608401610258565b949350505050565b6000763d602d80600a3d3981f3363d3d373d3d3d363d730000008260601b60e81c176000526e5af43d82803e903d91602b57fd5bf38260781b17602052603760096000f090506001600160a01b038116610ca85760405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b6044820152606401610258565b919050565b80356001600160a01b0381168114610ca857600080fd5b600060208284031215610cd657600080fd5b610cdf82610cad565b9392505050565b60008060408385031215610cf957600080fd5b610d0283610cad565b915060208301358015158114610d1757600080fd5b809150509250929050565b600080600060408486031215610d3757600080fd5b833567ffffffffffffffff80821115610d4f57600080fd5b818601915086601f830112610d6357600080fd5b813581811115610d7257600080fd5b876020828501011115610d8457600080fd5b602092830195509350610d9a9186019050610cad565b90509250925092565b608081526000855180608084015260005b81811015610dd157602081890181015160a0868401015201610db4565b50600060a08285018101919091526001600160a01b0396871660208501529486166040840152929094166060820152601f909101601f191601019291505056fea2646970667358221220456b90870e3d85efc7b07935c9ebf524b52afda7e811a86c55024c068ef360d164736f6c63430008120033";

type HashflowFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HashflowFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HashflowFactory__factory extends ContractFactory {
  constructor(...args: HashflowFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      HashflowFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): HashflowFactory__factory {
    return super.connect(runner) as HashflowFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HashflowFactoryInterface {
    return new Interface(_abi) as HashflowFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): HashflowFactory {
    return new Contract(address, _abi, runner) as unknown as HashflowFactory;
  }
}
