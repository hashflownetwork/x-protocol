/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IERC20AllowanceExtension,
  IERC20AllowanceExtensionInterface,
} from "../../../../contracts/pools/HashflowPool.sol/IERC20AllowanceExtension";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IERC20AllowanceExtension__factory {
  static readonly abi = _abi;
  static createInterface(): IERC20AllowanceExtensionInterface {
    return new Interface(_abi) as IERC20AllowanceExtensionInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IERC20AllowanceExtension {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IERC20AllowanceExtension;
  }
}
